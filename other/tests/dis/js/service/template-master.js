/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/service/template-master.js']) {
  _$jscoverage['js/service/template-master.js'] = [];
  _$jscoverage['js/service/template-master.js'][1] = 0;
  _$jscoverage['js/service/template-master.js'][3] = 0;
  _$jscoverage['js/service/template-master.js'][6] = 0;
  _$jscoverage['js/service/template-master.js'][8] = 0;
  _$jscoverage['js/service/template-master.js'][13] = 0;
  _$jscoverage['js/service/template-master.js'][25] = 0;
  _$jscoverage['js/service/template-master.js'][27] = 0;
  _$jscoverage['js/service/template-master.js'][29] = 0;
  _$jscoverage['js/service/template-master.js'][32] = 0;
  _$jscoverage['js/service/template-master.js'][33] = 0;
  _$jscoverage['js/service/template-master.js'][35] = 0;
  _$jscoverage['js/service/template-master.js'][43] = 0;
}
_$jscoverage['js/service/template-master.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>win<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"s\">\"use strict\"</span><span class=\"k\">;</span>","\t<span class=\"c\">/*global window, document */</span>","","\t<span class=\"k\">var</span> templateMaster<span class=\"k\">;</span>","","\ttemplateMaster <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\ttemplateSelector<span class=\"k\">:</span> <span class=\"s\">'script[type=\"text/x-template\"]'</span><span class=\"k\">,</span>","\t\ttmplText<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\ttmplFn<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\tcreateTemplateFunction<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> Function<span class=\"k\">(</span><span class=\"s\">\"obj\"</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"s\">\"var p=[]; with(obj){p.push('\"</span> <span class=\"k\">+</span> str","\t\t\t\t\t<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[\\r\\t\\n]/g</span><span class=\"k\">,</span> <span class=\"s\">\" \"</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"&lt;%\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\t</span><span class=\"s\">\"</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/((^|%&gt;)[^\\t]*)'/g</span><span class=\"k\">,</span> <span class=\"s\">\"$1</span><span class=\"t\">\\r</span><span class=\"s\">\"</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\t=([\\s\\S]*?)%&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">\"',$1,'\"</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\t</span><span class=\"s\">\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"');\"</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"%&gt;\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"p.push('\"</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\r</span><span class=\"s\">\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">'\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"');} return p.join('');\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tinit<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">var</span> templates <span class=\"k\">=</span> doc<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>templateSelector<span class=\"k\">);</span>","","\t\t\tArray<span class=\"k\">.</span>prototype<span class=\"k\">.</span>forEach<span class=\"k\">.</span>call<span class=\"k\">(</span>templates<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>tmplNode<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> tmplNode<span class=\"k\">.</span>dataset<span class=\"k\">.</span>name<span class=\"k\">,</span>","\t\t\t\t\ttext <span class=\"k\">=</span> tmplNode<span class=\"k\">.</span>textContent<span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>tmplText<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> text<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>tmplFn<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>createTemplateFunction<span class=\"k\">(</span>text<span class=\"k\">);</span>","","\t\t\t\ttmplNode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>tmplNode<span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\twin<span class=\"k\">.</span>templateMaster <span class=\"k\">=</span> templateMaster<span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">(</span>window<span class=\"k\">,</span> document<span class=\"k\">));</span>",""];
_$jscoverage['js/service/template-master.js'][1]++;
(function (win, doc) {
  _$jscoverage['js/service/template-master.js'][3]++;
  "use strict";
  _$jscoverage['js/service/template-master.js'][6]++;
  var templateMaster;
  _$jscoverage['js/service/template-master.js'][8]++;
  templateMaster = {templateSelector: "script[type=\"text/x-template\"]", tmplText: {}, tmplFn: {}, createTemplateFunction: (function (str) {
  _$jscoverage['js/service/template-master.js'][13]++;
  return new Function("obj", ("var p=[]; with(obj){p.push('" + str.replace(/[\r\t\n]/g, " ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g, "$1\r").replace(/\t=([\s\S]*?)%>/g, "',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'") + "');} return p.join('');"));
}), init: (function () {
  _$jscoverage['js/service/template-master.js'][25]++;
  var templates = doc.querySelectorAll(this.templateSelector);
  _$jscoverage['js/service/template-master.js'][27]++;
  Array.prototype.forEach.call(templates, (function (tmplNode) {
  _$jscoverage['js/service/template-master.js'][29]++;
  var name = tmplNode.dataset.name, text = tmplNode.textContent;
  _$jscoverage['js/service/template-master.js'][32]++;
  this.tmplText[name] = text;
  _$jscoverage['js/service/template-master.js'][33]++;
  this.tmplFn[name] = this.createTemplateFunction(text);
  _$jscoverage['js/service/template-master.js'][35]++;
  tmplNode.parentNode.removeChild(tmplNode);
}), this);
})};
  _$jscoverage['js/service/template-master.js'][43]++;
  win.templateMaster = templateMaster;
})(window, document);
