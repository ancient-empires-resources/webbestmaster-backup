/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/lib/bro.js']) {
  _$jscoverage['js/lib/bro.js'] = [];
  _$jscoverage['js/lib/bro.js'][1] = 0;
  _$jscoverage['js/lib/bro.js'][3] = 0;
  _$jscoverage['js/lib/bro.js'][6] = 0;
  _$jscoverage['js/lib/bro.js'][8] = 0;
  _$jscoverage['js/lib/bro.js'][12] = 0;
  _$jscoverage['js/lib/bro.js'][13] = 0;
  _$jscoverage['js/lib/bro.js'][15] = 0;
  _$jscoverage['js/lib/bro.js'][18] = 0;
  _$jscoverage['js/lib/bro.js'][19] = 0;
  _$jscoverage['js/lib/bro.js'][22] = 0;
  _$jscoverage['js/lib/bro.js'][25] = 0;
  _$jscoverage['js/lib/bro.js'][29] = 0;
  _$jscoverage['js/lib/bro.js'][40] = 0;
  _$jscoverage['js/lib/bro.js'][43] = 0;
  _$jscoverage['js/lib/bro.js'][68] = 0;
  _$jscoverage['js/lib/bro.js'][69] = 0;
  _$jscoverage['js/lib/bro.js'][72] = 0;
  _$jscoverage['js/lib/bro.js'][132] = 0;
  _$jscoverage['js/lib/bro.js'][136] = 0;
  _$jscoverage['js/lib/bro.js'][141] = 0;
  _$jscoverage['js/lib/bro.js'][142] = 0;
  _$jscoverage['js/lib/bro.js'][146] = 0;
  _$jscoverage['js/lib/bro.js'][148] = 0;
  _$jscoverage['js/lib/bro.js'][149] = 0;
  _$jscoverage['js/lib/bro.js'][151] = 0;
  _$jscoverage['js/lib/bro.js'][152] = 0;
  _$jscoverage['js/lib/bro.js'][154] = 0;
  _$jscoverage['js/lib/bro.js'][157] = 0;
  _$jscoverage['js/lib/bro.js'][158] = 0;
  _$jscoverage['js/lib/bro.js'][159] = 0;
  _$jscoverage['js/lib/bro.js'][160] = 0;
  _$jscoverage['js/lib/bro.js'][165] = 0;
  _$jscoverage['js/lib/bro.js'][166] = 0;
  _$jscoverage['js/lib/bro.js'][170] = 0;
  _$jscoverage['js/lib/bro.js'][171] = 0;
  _$jscoverage['js/lib/bro.js'][174] = 0;
  _$jscoverage['js/lib/bro.js'][175] = 0;
  _$jscoverage['js/lib/bro.js'][176] = 0;
  _$jscoverage['js/lib/bro.js'][179] = 0;
  _$jscoverage['js/lib/bro.js'][180] = 0;
  _$jscoverage['js/lib/bro.js'][187] = 0;
  _$jscoverage['js/lib/bro.js'][188] = 0;
  _$jscoverage['js/lib/bro.js'][192] = 0;
  _$jscoverage['js/lib/bro.js'][193] = 0;
  _$jscoverage['js/lib/bro.js'][196] = 0;
  _$jscoverage['js/lib/bro.js'][197] = 0;
  _$jscoverage['js/lib/bro.js'][198] = 0;
  _$jscoverage['js/lib/bro.js'][204] = 0;
  _$jscoverage['js/lib/bro.js'][205] = 0;
  _$jscoverage['js/lib/bro.js'][206] = 0;
  _$jscoverage['js/lib/bro.js'][209] = 0;
  _$jscoverage['js/lib/bro.js'][210] = 0;
  _$jscoverage['js/lib/bro.js'][211] = 0;
  _$jscoverage['js/lib/bro.js'][212] = 0;
  _$jscoverage['js/lib/bro.js'][220] = 0;
  _$jscoverage['js/lib/bro.js'][223] = 0;
  _$jscoverage['js/lib/bro.js'][226] = 0;
  _$jscoverage['js/lib/bro.js'][230] = 0;
  _$jscoverage['js/lib/bro.js'][231] = 0;
  _$jscoverage['js/lib/bro.js'][232] = 0;
  _$jscoverage['js/lib/bro.js'][235] = 0;
  _$jscoverage['js/lib/bro.js'][236] = 0;
  _$jscoverage['js/lib/bro.js'][240] = 0;
  _$jscoverage['js/lib/bro.js'][244] = 0;
  _$jscoverage['js/lib/bro.js'][246] = 0;
  _$jscoverage['js/lib/bro.js'][247] = 0;
  _$jscoverage['js/lib/bro.js'][254] = 0;
  _$jscoverage['js/lib/bro.js'][256] = 0;
  _$jscoverage['js/lib/bro.js'][257] = 0;
  _$jscoverage['js/lib/bro.js'][258] = 0;
  _$jscoverage['js/lib/bro.js'][262] = 0;
  _$jscoverage['js/lib/bro.js'][264] = 0;
  _$jscoverage['js/lib/bro.js'][265] = 0;
  _$jscoverage['js/lib/bro.js'][269] = 0;
  _$jscoverage['js/lib/bro.js'][274] = 0;
  _$jscoverage['js/lib/bro.js'][275] = 0;
  _$jscoverage['js/lib/bro.js'][276] = 0;
  _$jscoverage['js/lib/bro.js'][283] = 0;
  _$jscoverage['js/lib/bro.js'][284] = 0;
  _$jscoverage['js/lib/bro.js'][285] = 0;
  _$jscoverage['js/lib/bro.js'][289] = 0;
  _$jscoverage['js/lib/bro.js'][291] = 0;
  _$jscoverage['js/lib/bro.js'][292] = 0;
  _$jscoverage['js/lib/bro.js'][296] = 0;
  _$jscoverage['js/lib/bro.js'][301] = 0;
  _$jscoverage['js/lib/bro.js'][302] = 0;
  _$jscoverage['js/lib/bro.js'][303] = 0;
  _$jscoverage['js/lib/bro.js'][306] = 0;
  _$jscoverage['js/lib/bro.js'][307] = 0;
  _$jscoverage['js/lib/bro.js'][308] = 0;
  _$jscoverage['js/lib/bro.js'][313] = 0;
  _$jscoverage['js/lib/bro.js'][314] = 0;
  _$jscoverage['js/lib/bro.js'][320] = 0;
  _$jscoverage['js/lib/bro.js'][323] = 0;
  _$jscoverage['js/lib/bro.js'][325] = 0;
  _$jscoverage['js/lib/bro.js'][326] = 0;
  _$jscoverage['js/lib/bro.js'][327] = 0;
  _$jscoverage['js/lib/bro.js'][328] = 0;
  _$jscoverage['js/lib/bro.js'][330] = 0;
  _$jscoverage['js/lib/bro.js'][331] = 0;
  _$jscoverage['js/lib/bro.js'][334] = 0;
  _$jscoverage['js/lib/bro.js'][337] = 0;
  _$jscoverage['js/lib/bro.js'][338] = 0;
  _$jscoverage['js/lib/bro.js'][339] = 0;
  _$jscoverage['js/lib/bro.js'][341] = 0;
  _$jscoverage['js/lib/bro.js'][344] = 0;
  _$jscoverage['js/lib/bro.js'][346] = 0;
  _$jscoverage['js/lib/bro.js'][350] = 0;
  _$jscoverage['js/lib/bro.js'][351] = 0;
  _$jscoverage['js/lib/bro.js'][352] = 0;
  _$jscoverage['js/lib/bro.js'][356] = 0;
  _$jscoverage['js/lib/bro.js'][359] = 0;
  _$jscoverage['js/lib/bro.js'][360] = 0;
  _$jscoverage['js/lib/bro.js'][363] = 0;
  _$jscoverage['js/lib/bro.js'][364] = 0;
  _$jscoverage['js/lib/bro.js'][365] = 0;
  _$jscoverage['js/lib/bro.js'][369] = 0;
  _$jscoverage['js/lib/bro.js'][370] = 0;
  _$jscoverage['js/lib/bro.js'][373] = 0;
  _$jscoverage['js/lib/bro.js'][375] = 0;
  _$jscoverage['js/lib/bro.js'][376] = 0;
  _$jscoverage['js/lib/bro.js'][378] = 0;
  _$jscoverage['js/lib/bro.js'][379] = 0;
  _$jscoverage['js/lib/bro.js'][380] = 0;
  _$jscoverage['js/lib/bro.js'][381] = 0;
  _$jscoverage['js/lib/bro.js'][384] = 0;
  _$jscoverage['js/lib/bro.js'][386] = 0;
  _$jscoverage['js/lib/bro.js'][387] = 0;
  _$jscoverage['js/lib/bro.js'][389] = 0;
  _$jscoverage['js/lib/bro.js'][392] = 0;
  _$jscoverage['js/lib/bro.js'][396] = 0;
  _$jscoverage['js/lib/bro.js'][397] = 0;
  _$jscoverage['js/lib/bro.js'][400] = 0;
  _$jscoverage['js/lib/bro.js'][401] = 0;
  _$jscoverage['js/lib/bro.js'][402] = 0;
  _$jscoverage['js/lib/bro.js'][403] = 0;
  _$jscoverage['js/lib/bro.js'][404] = 0;
  _$jscoverage['js/lib/bro.js'][405] = 0;
  _$jscoverage['js/lib/bro.js'][411] = 0;
  _$jscoverage['js/lib/bro.js'][412] = 0;
  _$jscoverage['js/lib/bro.js'][413] = 0;
  _$jscoverage['js/lib/bro.js'][415] = 0;
  _$jscoverage['js/lib/bro.js'][416] = 0;
  _$jscoverage['js/lib/bro.js'][417] = 0;
  _$jscoverage['js/lib/bro.js'][419] = 0;
  _$jscoverage['js/lib/bro.js'][422] = 0;
  _$jscoverage['js/lib/bro.js'][423] = 0;
  _$jscoverage['js/lib/bro.js'][426] = 0;
  _$jscoverage['js/lib/bro.js'][428] = 0;
  _$jscoverage['js/lib/bro.js'][432] = 0;
  _$jscoverage['js/lib/bro.js'][433] = 0;
  _$jscoverage['js/lib/bro.js'][436] = 0;
  _$jscoverage['js/lib/bro.js'][439] = 0;
  _$jscoverage['js/lib/bro.js'][440] = 0;
  _$jscoverage['js/lib/bro.js'][441] = 0;
  _$jscoverage['js/lib/bro.js'][444] = 0;
  _$jscoverage['js/lib/bro.js'][445] = 0;
  _$jscoverage['js/lib/bro.js'][446] = 0;
  _$jscoverage['js/lib/bro.js'][447] = 0;
  _$jscoverage['js/lib/bro.js'][448] = 0;
  _$jscoverage['js/lib/bro.js'][454] = 0;
  _$jscoverage['js/lib/bro.js'][458] = 0;
  _$jscoverage['js/lib/bro.js'][459] = 0;
  _$jscoverage['js/lib/bro.js'][460] = 0;
  _$jscoverage['js/lib/bro.js'][461] = 0;
  _$jscoverage['js/lib/bro.js'][462] = 0;
  _$jscoverage['js/lib/bro.js'][463] = 0;
  _$jscoverage['js/lib/bro.js'][466] = 0;
  _$jscoverage['js/lib/bro.js'][469] = 0;
  _$jscoverage['js/lib/bro.js'][470] = 0;
  _$jscoverage['js/lib/bro.js'][472] = 0;
  _$jscoverage['js/lib/bro.js'][473] = 0;
  _$jscoverage['js/lib/bro.js'][476] = 0;
  _$jscoverage['js/lib/bro.js'][478] = 0;
  _$jscoverage['js/lib/bro.js'][479] = 0;
  _$jscoverage['js/lib/bro.js'][482] = 0;
  _$jscoverage['js/lib/bro.js'][486] = 0;
  _$jscoverage['js/lib/bro.js'][488] = 0;
  _$jscoverage['js/lib/bro.js'][489] = 0;
  _$jscoverage['js/lib/bro.js'][492] = 0;
  _$jscoverage['js/lib/bro.js'][493] = 0;
  _$jscoverage['js/lib/bro.js'][496] = 0;
  _$jscoverage['js/lib/bro.js'][497] = 0;
  _$jscoverage['js/lib/bro.js'][498] = 0;
  _$jscoverage['js/lib/bro.js'][501] = 0;
  _$jscoverage['js/lib/bro.js'][502] = 0;
  _$jscoverage['js/lib/bro.js'][503] = 0;
  _$jscoverage['js/lib/bro.js'][504] = 0;
  _$jscoverage['js/lib/bro.js'][508] = 0;
  _$jscoverage['js/lib/bro.js'][512] = 0;
  _$jscoverage['js/lib/bro.js'][513] = 0;
  _$jscoverage['js/lib/bro.js'][515] = 0;
  _$jscoverage['js/lib/bro.js'][516] = 0;
  _$jscoverage['js/lib/bro.js'][517] = 0;
  _$jscoverage['js/lib/bro.js'][519] = 0;
  _$jscoverage['js/lib/bro.js'][520] = 0;
  _$jscoverage['js/lib/bro.js'][524] = 0;
  _$jscoverage['js/lib/bro.js'][527] = 0;
  _$jscoverage['js/lib/bro.js'][528] = 0;
  _$jscoverage['js/lib/bro.js'][529] = 0;
  _$jscoverage['js/lib/bro.js'][530] = 0;
  _$jscoverage['js/lib/bro.js'][531] = 0;
  _$jscoverage['js/lib/bro.js'][535] = 0;
  _$jscoverage['js/lib/bro.js'][538] = 0;
  _$jscoverage['js/lib/bro.js'][539] = 0;
  _$jscoverage['js/lib/bro.js'][540] = 0;
  _$jscoverage['js/lib/bro.js'][541] = 0;
  _$jscoverage['js/lib/bro.js'][542] = 0;
  _$jscoverage['js/lib/bro.js'][546] = 0;
  _$jscoverage['js/lib/bro.js'][549] = 0;
  _$jscoverage['js/lib/bro.js'][551] = 0;
  _$jscoverage['js/lib/bro.js'][552] = 0;
  _$jscoverage['js/lib/bro.js'][553] = 0;
  _$jscoverage['js/lib/bro.js'][555] = 0;
  _$jscoverage['js/lib/bro.js'][557] = 0;
  _$jscoverage['js/lib/bro.js'][560] = 0;
  _$jscoverage['js/lib/bro.js'][561] = 0;
  _$jscoverage['js/lib/bro.js'][564] = 0;
  _$jscoverage['js/lib/bro.js'][568] = 0;
  _$jscoverage['js/lib/bro.js'][569] = 0;
  _$jscoverage['js/lib/bro.js'][570] = 0;
  _$jscoverage['js/lib/bro.js'][573] = 0;
  _$jscoverage['js/lib/bro.js'][577] = 0;
  _$jscoverage['js/lib/bro.js'][578] = 0;
  _$jscoverage['js/lib/bro.js'][581] = 0;
  _$jscoverage['js/lib/bro.js'][582] = 0;
  _$jscoverage['js/lib/bro.js'][585] = 0;
  _$jscoverage['js/lib/bro.js'][587] = 0;
  _$jscoverage['js/lib/bro.js'][589] = 0;
  _$jscoverage['js/lib/bro.js'][591] = 0;
  _$jscoverage['js/lib/bro.js'][592] = 0;
  _$jscoverage['js/lib/bro.js'][595] = 0;
  _$jscoverage['js/lib/bro.js'][596] = 0;
  _$jscoverage['js/lib/bro.js'][599] = 0;
  _$jscoverage['js/lib/bro.js'][600] = 0;
  _$jscoverage['js/lib/bro.js'][602] = 0;
  _$jscoverage['js/lib/bro.js'][603] = 0;
  _$jscoverage['js/lib/bro.js'][605] = 0;
  _$jscoverage['js/lib/bro.js'][606] = 0;
  _$jscoverage['js/lib/bro.js'][608] = 0;
  _$jscoverage['js/lib/bro.js'][609] = 0;
  _$jscoverage['js/lib/bro.js'][611] = 0;
  _$jscoverage['js/lib/bro.js'][614] = 0;
  _$jscoverage['js/lib/bro.js'][616] = 0;
  _$jscoverage['js/lib/bro.js'][617] = 0;
  _$jscoverage['js/lib/bro.js'][618] = 0;
  _$jscoverage['js/lib/bro.js'][619] = 0;
  _$jscoverage['js/lib/bro.js'][620] = 0;
  _$jscoverage['js/lib/bro.js'][621] = 0;
  _$jscoverage['js/lib/bro.js'][622] = 0;
  _$jscoverage['js/lib/bro.js'][624] = 0;
  _$jscoverage['js/lib/bro.js'][625] = 0;
  _$jscoverage['js/lib/bro.js'][626] = 0;
  _$jscoverage['js/lib/bro.js'][629] = 0;
  _$jscoverage['js/lib/bro.js'][630] = 0;
  _$jscoverage['js/lib/bro.js'][631] = 0;
  _$jscoverage['js/lib/bro.js'][632] = 0;
  _$jscoverage['js/lib/bro.js'][633] = 0;
  _$jscoverage['js/lib/bro.js'][634] = 0;
  _$jscoverage['js/lib/bro.js'][636] = 0;
  _$jscoverage['js/lib/bro.js'][637] = 0;
  _$jscoverage['js/lib/bro.js'][638] = 0;
  _$jscoverage['js/lib/bro.js'][639] = 0;
  _$jscoverage['js/lib/bro.js'][640] = 0;
  _$jscoverage['js/lib/bro.js'][641] = 0;
  _$jscoverage['js/lib/bro.js'][642] = 0;
  _$jscoverage['js/lib/bro.js'][645] = 0;
  _$jscoverage['js/lib/bro.js'][647] = 0;
  _$jscoverage['js/lib/bro.js'][649] = 0;
  _$jscoverage['js/lib/bro.js'][653] = 0;
  _$jscoverage['js/lib/bro.js'][654] = 0;
  _$jscoverage['js/lib/bro.js'][655] = 0;
  _$jscoverage['js/lib/bro.js'][656] = 0;
  _$jscoverage['js/lib/bro.js'][657] = 0;
  _$jscoverage['js/lib/bro.js'][658] = 0;
  _$jscoverage['js/lib/bro.js'][662] = 0;
  _$jscoverage['js/lib/bro.js'][666] = 0;
  _$jscoverage['js/lib/bro.js'][668] = 0;
  _$jscoverage['js/lib/bro.js'][670] = 0;
  _$jscoverage['js/lib/bro.js'][671] = 0;
  _$jscoverage['js/lib/bro.js'][673] = 0;
  _$jscoverage['js/lib/bro.js'][676] = 0;
  _$jscoverage['js/lib/bro.js'][677] = 0;
  _$jscoverage['js/lib/bro.js'][678] = 0;
  _$jscoverage['js/lib/bro.js'][681] = 0;
  _$jscoverage['js/lib/bro.js'][682] = 0;
  _$jscoverage['js/lib/bro.js'][683] = 0;
  _$jscoverage['js/lib/bro.js'][684] = 0;
  _$jscoverage['js/lib/bro.js'][688] = 0;
  _$jscoverage['js/lib/bro.js'][692] = 0;
  _$jscoverage['js/lib/bro.js'][693] = 0;
  _$jscoverage['js/lib/bro.js'][694] = 0;
  _$jscoverage['js/lib/bro.js'][696] = 0;
  _$jscoverage['js/lib/bro.js'][697] = 0;
  _$jscoverage['js/lib/bro.js'][700] = 0;
  _$jscoverage['js/lib/bro.js'][701] = 0;
  _$jscoverage['js/lib/bro.js'][702] = 0;
  _$jscoverage['js/lib/bro.js'][704] = 0;
  _$jscoverage['js/lib/bro.js'][707] = 0;
  _$jscoverage['js/lib/bro.js'][708] = 0;
  _$jscoverage['js/lib/bro.js'][709] = 0;
  _$jscoverage['js/lib/bro.js'][711] = 0;
  _$jscoverage['js/lib/bro.js'][714] = 0;
  _$jscoverage['js/lib/bro.js'][716] = 0;
  _$jscoverage['js/lib/bro.js'][717] = 0;
  _$jscoverage['js/lib/bro.js'][718] = 0;
  _$jscoverage['js/lib/bro.js'][720] = 0;
  _$jscoverage['js/lib/bro.js'][723] = 0;
  _$jscoverage['js/lib/bro.js'][724] = 0;
  _$jscoverage['js/lib/bro.js'][725] = 0;
  _$jscoverage['js/lib/bro.js'][727] = 0;
  _$jscoverage['js/lib/bro.js'][730] = 0;
  _$jscoverage['js/lib/bro.js'][731] = 0;
  _$jscoverage['js/lib/bro.js'][732] = 0;
  _$jscoverage['js/lib/bro.js'][733] = 0;
  _$jscoverage['js/lib/bro.js'][734] = 0;
  _$jscoverage['js/lib/bro.js'][739] = 0;
  _$jscoverage['js/lib/bro.js'][743] = 0;
  _$jscoverage['js/lib/bro.js'][744] = 0;
  _$jscoverage['js/lib/bro.js'][747] = 0;
  _$jscoverage['js/lib/bro.js'][748] = 0;
  _$jscoverage['js/lib/bro.js'][749] = 0;
  _$jscoverage['js/lib/bro.js'][751] = 0;
  _$jscoverage['js/lib/bro.js'][754] = 0;
  _$jscoverage['js/lib/bro.js'][756] = 0;
  _$jscoverage['js/lib/bro.js'][757] = 0;
  _$jscoverage['js/lib/bro.js'][758] = 0;
  _$jscoverage['js/lib/bro.js'][761] = 0;
  _$jscoverage['js/lib/bro.js'][764] = 0;
  _$jscoverage['js/lib/bro.js'][768] = 0;
  _$jscoverage['js/lib/bro.js'][770] = 0;
  _$jscoverage['js/lib/bro.js'][771] = 0;
  _$jscoverage['js/lib/bro.js'][772] = 0;
  _$jscoverage['js/lib/bro.js'][776] = 0;
  _$jscoverage['js/lib/bro.js'][778] = 0;
  _$jscoverage['js/lib/bro.js'][779] = 0;
  _$jscoverage['js/lib/bro.js'][781] = 0;
  _$jscoverage['js/lib/bro.js'][782] = 0;
  _$jscoverage['js/lib/bro.js'][785] = 0;
  _$jscoverage['js/lib/bro.js'][786] = 0;
  _$jscoverage['js/lib/bro.js'][789] = 0;
  _$jscoverage['js/lib/bro.js'][792] = 0;
  _$jscoverage['js/lib/bro.js'][793] = 0;
  _$jscoverage['js/lib/bro.js'][794] = 0;
  _$jscoverage['js/lib/bro.js'][795] = 0;
  _$jscoverage['js/lib/bro.js'][797] = 0;
  _$jscoverage['js/lib/bro.js'][801] = 0;
  _$jscoverage['js/lib/bro.js'][805] = 0;
  _$jscoverage['js/lib/bro.js'][807] = 0;
  _$jscoverage['js/lib/bro.js'][808] = 0;
  _$jscoverage['js/lib/bro.js'][809] = 0;
  _$jscoverage['js/lib/bro.js'][810] = 0;
  _$jscoverage['js/lib/bro.js'][811] = 0;
  _$jscoverage['js/lib/bro.js'][812] = 0;
  _$jscoverage['js/lib/bro.js'][814] = 0;
  _$jscoverage['js/lib/bro.js'][820] = 0;
  _$jscoverage['js/lib/bro.js'][824] = 0;
  _$jscoverage['js/lib/bro.js'][828] = 0;
  _$jscoverage['js/lib/bro.js'][830] = 0;
  _$jscoverage['js/lib/bro.js'][831] = 0;
  _$jscoverage['js/lib/bro.js'][835] = 0;
  _$jscoverage['js/lib/bro.js'][836] = 0;
  _$jscoverage['js/lib/bro.js'][837] = 0;
  _$jscoverage['js/lib/bro.js'][838] = 0;
  _$jscoverage['js/lib/bro.js'][839] = 0;
  _$jscoverage['js/lib/bro.js'][840] = 0;
  _$jscoverage['js/lib/bro.js'][844] = 0;
  _$jscoverage['js/lib/bro.js'][847] = 0;
  _$jscoverage['js/lib/bro.js'][848] = 0;
  _$jscoverage['js/lib/bro.js'][849] = 0;
  _$jscoverage['js/lib/bro.js'][851] = 0;
  _$jscoverage['js/lib/bro.js'][854] = 0;
  _$jscoverage['js/lib/bro.js'][855] = 0;
  _$jscoverage['js/lib/bro.js'][857] = 0;
  _$jscoverage['js/lib/bro.js'][862] = 0;
  _$jscoverage['js/lib/bro.js'][863] = 0;
  _$jscoverage['js/lib/bro.js'][874] = 0;
  _$jscoverage['js/lib/bro.js'][875] = 0;
  _$jscoverage['js/lib/bro.js'][878] = 0;
  _$jscoverage['js/lib/bro.js'][879] = 0;
  _$jscoverage['js/lib/bro.js'][882] = 0;
  _$jscoverage['js/lib/bro.js'][883] = 0;
  _$jscoverage['js/lib/bro.js'][884] = 0;
  _$jscoverage['js/lib/bro.js'][888] = 0;
  _$jscoverage['js/lib/bro.js'][889] = 0;
  _$jscoverage['js/lib/bro.js'][892] = 0;
  _$jscoverage['js/lib/bro.js'][893] = 0;
  _$jscoverage['js/lib/bro.js'][896] = 0;
  _$jscoverage['js/lib/bro.js'][898] = 0;
  _$jscoverage['js/lib/bro.js'][899] = 0;
  _$jscoverage['js/lib/bro.js'][902] = 0;
  _$jscoverage['js/lib/bro.js'][906] = 0;
  _$jscoverage['js/lib/bro.js'][907] = 0;
  _$jscoverage['js/lib/bro.js'][911] = 0;
  _$jscoverage['js/lib/bro.js'][912] = 0;
  _$jscoverage['js/lib/bro.js'][913] = 0;
  _$jscoverage['js/lib/bro.js'][914] = 0;
  _$jscoverage['js/lib/bro.js'][915] = 0;
  _$jscoverage['js/lib/bro.js'][916] = 0;
  _$jscoverage['js/lib/bro.js'][917] = 0;
  _$jscoverage['js/lib/bro.js'][922] = 0;
  _$jscoverage['js/lib/bro.js'][926] = 0;
  _$jscoverage['js/lib/bro.js'][927] = 0;
  _$jscoverage['js/lib/bro.js'][930] = 0;
  _$jscoverage['js/lib/bro.js'][931] = 0;
  _$jscoverage['js/lib/bro.js'][937] = 0;
  _$jscoverage['js/lib/bro.js'][939] = 0;
  _$jscoverage['js/lib/bro.js'][941] = 0;
  _$jscoverage['js/lib/bro.js'][942] = 0;
  _$jscoverage['js/lib/bro.js'][944] = 0;
  _$jscoverage['js/lib/bro.js'][946] = 0;
  _$jscoverage['js/lib/bro.js'][947] = 0;
  _$jscoverage['js/lib/bro.js'][948] = 0;
  _$jscoverage['js/lib/bro.js'][951] = 0;
  _$jscoverage['js/lib/bro.js'][952] = 0;
  _$jscoverage['js/lib/bro.js'][953] = 0;
  _$jscoverage['js/lib/bro.js'][956] = 0;
  _$jscoverage['js/lib/bro.js'][959] = 0;
  _$jscoverage['js/lib/bro.js'][961] = 0;
  _$jscoverage['js/lib/bro.js'][962] = 0;
  _$jscoverage['js/lib/bro.js'][963] = 0;
  _$jscoverage['js/lib/bro.js'][965] = 0;
  _$jscoverage['js/lib/bro.js'][969] = 0;
}
_$jscoverage['js/lib/bro.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>win<span class=\"k\">,</span> doc<span class=\"k\">,</span> docElem<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"s\">\"use strict\"</span><span class=\"k\">;</span>","\t<span class=\"c\">/*global console, alert, window, document, Event */</span>","","\t<span class=\"k\">var</span> isTouch<span class=\"k\">,</span> info<span class=\"k\">,</span> bro<span class=\"k\">,</span> Bro<span class=\"k\">,</span> re<span class=\"k\">;</span>","","\tBro <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>selector<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> Bro<span class=\"k\">(</span>selector<span class=\"k\">,</span> context<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>selector <span class=\"k\">instanceof</span> Bro<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> selector<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>init<span class=\"k\">(</span>selector<span class=\"k\">,</span> context<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tbro <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>selector<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> Bro<span class=\"k\">(</span>selector<span class=\"k\">,</span> context<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\twin<span class=\"k\">.</span>$ <span class=\"k\">=</span> bro<span class=\"k\">;</span>","\t<span class=\"c\">//win.Bro = Bro;</span>","","\tre <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\thtmlNode<span class=\"k\">:</span> <span class=\"s\">/(^|\\s+)&lt;[\\s\\S]+&gt;($|\\s+)/</span><span class=\"k\">,</span>","\t\tjson<span class=\"k\">:</span> <span class=\"s\">/(^|\\s+)\\{[\\s\\S]*\\}($|\\s+)/</span><span class=\"k\">,</span>","\t\txToX<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/-\\w/gi</span><span class=\"k\">,</span> Function<span class=\"k\">.</span>prototype<span class=\"k\">.</span>call<span class=\"k\">.</span>bind<span class=\"k\">(</span>String<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toUpperCase<span class=\"k\">)).</span>replace<span class=\"k\">(</span><span class=\"s\">/-/gi</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">//\tevents = {</span>","<span class=\"c\">//\t\ttype: ['blur', 'focus', 'focusin', 'focusout', 'load', 'resize', 'scroll', 'unload',</span>","<span class=\"c\">//\t\t\t'click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout',</span>","<span class=\"c\">//\t\t\t'mouseenter', 'mouseleave', 'change', 'select', 'submit', 'keydown',</span>","<span class=\"c\">//\t\t\t'keypress', 'keyup', 'error', 'contextmenu']</span>","<span class=\"c\">//\t};</span>","","\tisTouch <span class=\"k\">=</span> docElem<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span><span class=\"s\">'ontouchstart'</span><span class=\"k\">);</span>","","\t<span class=\"c\">//=== info start ===//</span>","\tinfo <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\tisPhone<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\tisTouch<span class=\"k\">:</span> isTouch<span class=\"k\">,</span>","\t\tpreCSS<span class=\"k\">:</span> <span class=\"s\">'-webkit-'</span><span class=\"k\">,</span> <span class=\"c\">// see bro vendorPrefix</span>","\t\tpreJS<span class=\"k\">:</span> <span class=\"s\">'webkit'</span><span class=\"k\">,</span>","\t\tcanScroll<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","\t\tisAndroid<span class=\"k\">:</span> <span class=\"k\">(</span><span class=\"s\">/android/i</span><span class=\"k\">).</span>test<span class=\"k\">(</span>win<span class=\"k\">.</span>navigator<span class=\"k\">.</span>userAgent<span class=\"k\">),</span>","\t\tevt<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tdown<span class=\"k\">:</span> isTouch <span class=\"k\">?</span> <span class=\"s\">'touchstart'</span> <span class=\"k\">:</span> <span class=\"s\">'mousedown'</span><span class=\"k\">,</span>","\t\t\tmove<span class=\"k\">:</span> isTouch <span class=\"k\">?</span> <span class=\"s\">'touchmove'</span> <span class=\"k\">:</span> <span class=\"s\">'mousemove'</span><span class=\"k\">,</span>","\t\t\tup<span class=\"k\">:</span> isTouch <span class=\"k\">?</span> <span class=\"s\">'touchend'</span> <span class=\"k\">:</span> <span class=\"s\">'mouseup'</span><span class=\"k\">,</span>","\t\t\tout<span class=\"k\">:</span> isTouch <span class=\"k\">?</span> <span class=\"s\">'touchcancel'</span> <span class=\"k\">:</span> <span class=\"s\">'mouseout'</span><span class=\"k\">,</span>","\t\t\ttouchStart<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tx<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\ty<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\ttouchMove<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tx<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\ty<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tmaxDistance<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tx<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\ty<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tupdateMaxDistance<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>x <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>x<span class=\"k\">,</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>touchMove<span class=\"k\">.</span>x <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>touchStart<span class=\"k\">.</span>x<span class=\"k\">));</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>y <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>y<span class=\"k\">,</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>touchMove<span class=\"k\">.</span>y <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>touchStart<span class=\"k\">.</span>y<span class=\"k\">));</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tresetMaxDistance<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>maxDistance <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\tx<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\t\ty<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tbefore<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tdown<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tup<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tclick<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\t\tx<span class=\"k\">:</span> NaN<span class=\"k\">,</span>","\t\t\t\t\ty<span class=\"k\">:</span> NaN","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tcurrent<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tdown<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tup<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tclick<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\t\tx<span class=\"k\">:</span> NaN<span class=\"k\">,</span>","\t\t\t\t\ty<span class=\"k\">:</span> NaN","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tdefaultEventContainer<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tdown<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tup<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\t\tclick<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\t\ttime<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","\t\t\t\t\tx<span class=\"k\">:</span> NaN<span class=\"k\">,</span>","\t\t\t\t\ty<span class=\"k\">:</span> NaN","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\textraTypes<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"s\">'dblclick'</span><span class=\"k\">,</span> <span class=\"s\">'hold'</span><span class=\"k\">,</span> <span class=\"s\">'swipe'</span><span class=\"k\">],</span>","\t\t\ttouchTypes<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'mousedown'</span><span class=\"k\">,</span> <span class=\"s\">'mousemove'</span><span class=\"k\">,</span> <span class=\"s\">'mouseup'</span><span class=\"k\">,</span> <span class=\"s\">'mouseout'</span><span class=\"k\">],</span>","\t\t\ttouchMouseMap<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\t\tmousedown<span class=\"k\">:</span> <span class=\"s\">'touchstart'</span><span class=\"k\">,</span>","\t\t\t\tmousemove<span class=\"k\">:</span> <span class=\"s\">'touchmove'</span><span class=\"k\">,</span>","\t\t\t\tmouseup<span class=\"k\">:</span> <span class=\"s\">'touchend'</span><span class=\"k\">,</span>","\t\t\t\tmouseout<span class=\"k\">:</span> <span class=\"s\">'touchcancel'</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tisActive<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\tisClick<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>x<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>y<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">5</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tdispatchEvent<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t\t<span class=\"k\">var</span> now <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">(),</span>","\t\t\t\t\tevt<span class=\"k\">,</span> dX<span class=\"k\">,</span> dY<span class=\"k\">,</span> direction<span class=\"k\">;</span>","","\t\t\t\t<span class=\"c\">// detect click</span>","\t\t\t\t<span class=\"c\">// detect node</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>nodes<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"c\">// detect swipe - begin</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">((</span>now <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>time<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">600</span> <span class=\"k\">&amp;&amp;</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>x<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>maxDistance<span class=\"k\">.</span>y<span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"s\">60</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// 600 - max swipe time, 70 - min swipe distance</span>","","\t\t\t\t\tdX <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>x <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>touchMove<span class=\"k\">.</span>x<span class=\"k\">;</span>","\t\t\t\t\tdY <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>y <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>touchMove<span class=\"k\">.</span>y<span class=\"k\">;</span>","","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>dX<span class=\"k\">)</span> <span class=\"k\">&gt;</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>dY<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\t\tdirection <span class=\"k\">=</span> <span class=\"k\">(</span>dX <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">'left'</span> <span class=\"k\">:</span> <span class=\"s\">'right'</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\tdirection <span class=\"k\">=</span> <span class=\"k\">(</span>dY <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">'up'</span> <span class=\"k\">:</span> <span class=\"s\">'down'</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\tevt <span class=\"k\">=</span> doc<span class=\"k\">.</span>createEvent<span class=\"k\">(</span><span class=\"s\">'Event'</span><span class=\"k\">);</span>   <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\t\tevt<span class=\"k\">.</span>direction <span class=\"k\">=</span> direction<span class=\"k\">;</span>","\t\t\t\t\tevt<span class=\"k\">.</span>initEvent<span class=\"k\">(</span><span class=\"s\">'$swipe$'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>      <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\t\tnode<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>evt<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"c\">// detect swipe - end</span>","","\t\t\t\t<span class=\"c\">// detect click position</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>isClick<span class=\"k\">())</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"c\">// detect time of last probably click</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">((</span>now <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>time<span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"s\">300</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tevt <span class=\"k\">=</span> doc<span class=\"k\">.</span>createEvent<span class=\"k\">(</span><span class=\"s\">'Event'</span><span class=\"k\">);</span>   <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\tevt<span class=\"k\">.</span>initEvent<span class=\"k\">(</span><span class=\"s\">'$click$'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>      <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\tnode<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>evt<span class=\"k\">);</span>","\t\t\t\t<span class=\"c\">//node.dispatchEvent(new Event('$click$'));</span>","","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>before<span class=\"k\">.</span>click <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>click<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>click <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\ttime<span class=\"k\">:</span> now<span class=\"k\">,</span>","\t\t\t\t\tx<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>touchMove<span class=\"k\">.</span>x<span class=\"k\">,</span>","\t\t\t\t\ty<span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>touchMove<span class=\"k\">.</span>y","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"c\">// detect dblclick time</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>click<span class=\"k\">.</span>time <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>before<span class=\"k\">.</span>click<span class=\"k\">.</span>time <span class=\"k\">&gt;</span> <span class=\"s\">300</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"c\">// detect dblclick position</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>max<span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>before<span class=\"k\">.</span>click<span class=\"k\">.</span>x <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>click<span class=\"k\">.</span>x<span class=\"k\">),</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>before<span class=\"k\">.</span>click<span class=\"k\">.</span>y <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>click<span class=\"k\">.</span>y<span class=\"k\">))</span> <span class=\"k\">&gt;</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tevt <span class=\"k\">=</span> doc<span class=\"k\">.</span>createEvent<span class=\"k\">(</span><span class=\"s\">'Event'</span><span class=\"k\">);</span>   <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\tevt<span class=\"k\">.</span>initEvent<span class=\"k\">(</span><span class=\"s\">'$dblclick$'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>      <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\tnode<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>evt<span class=\"k\">);</span>","\t\t\t\t<span class=\"c\">//node.dispatchEvent(new Event('$dblclick$'));</span>","","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tdetectHold<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\t\t<span class=\"k\">var</span> evt<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(((</span>Date<span class=\"k\">.</span>now<span class=\"k\">()</span> <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>up<span class=\"k\">.</span>time<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"k\">this</span><span class=\"k\">.</span>holdPeriod<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>isClick<span class=\"k\">())</span> <span class=\"k\">{</span> <span class=\"c\">// to little to create hold event</span>","\t\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tevt <span class=\"k\">=</span> doc<span class=\"k\">.</span>createEvent<span class=\"k\">(</span><span class=\"s\">'Event'</span><span class=\"k\">);</span>   <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\tevt<span class=\"k\">.</span>initEvent<span class=\"k\">(</span><span class=\"s\">'$hold$'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>      <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>nodes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tnode<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>evt<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tholdPeriod<span class=\"k\">:</span> <span class=\"s\">500</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tscreen<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tgetWidth<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> docElem<span class=\"k\">.</span>clientWidth<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tgetHeight<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> docElem<span class=\"k\">.</span>clientHeight<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t\tgetAspectRatio<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> docElem<span class=\"k\">.</span>clientWidth <span class=\"k\">/</span> docElem<span class=\"k\">.</span>clientHeight<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tinit<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>getIsPhone<span class=\"k\">();</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>runDetector<span class=\"k\">();</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>bindBodyScroll<span class=\"k\">();</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tgetIsPhone<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>isPhone <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>docElem<span class=\"k\">.</span>clientWidth<span class=\"k\">,</span> docElem<span class=\"k\">.</span>clientHeight<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">700</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>isPhone<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\trunDetector<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">var</span> body <span class=\"k\">=</span> doc<span class=\"k\">.</span>body<span class=\"k\">,</span>","\t\t\t\tthat <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t\t\t<span class=\"c\">// detect XY onTouchStart</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isTouch<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t\tbody<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>evt<span class=\"k\">.</span>down<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>current<span class=\"k\">.</span>down <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\ttime<span class=\"k\">:</span> Date<span class=\"k\">.</span>now<span class=\"k\">(),</span>","\t\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\t\tx<span class=\"k\">:</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageX<span class=\"k\">,</span>","\t\t\t\t\t\ty<span class=\"k\">:</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t\t\twin<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>that<span class=\"k\">.</span>evt<span class=\"k\">.</span>detectHold<span class=\"k\">.</span>bind<span class=\"k\">(</span>that<span class=\"k\">.</span>evt<span class=\"k\">),</span> that<span class=\"k\">.</span>evt<span class=\"k\">.</span>holdPeriod<span class=\"k\">);</span>","","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>isActive <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>resetMaxDistance<span class=\"k\">();</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchStart <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\tx<span class=\"k\">:</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageX<span class=\"k\">,</span>","\t\t\t\t\t\ty<span class=\"k\">:</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchMove <span class=\"k\">=</span> that<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchStart<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\tbody<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>evt<span class=\"k\">.</span>move<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchMove <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\tx<span class=\"k\">:</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageX<span class=\"k\">,</span>","\t\t\t\t\t\ty<span class=\"k\">:</span> e<span class=\"k\">.</span>touches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>pageY","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>updateMaxDistance<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","\t\t\t\tbody<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>evt<span class=\"k\">.</span>down<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\twin<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span>that<span class=\"k\">.</span>evt<span class=\"k\">.</span>detectHold<span class=\"k\">.</span>bind<span class=\"k\">(</span>that<span class=\"k\">.</span>evt<span class=\"k\">),</span> that<span class=\"k\">.</span>evt<span class=\"k\">.</span>holdPeriod<span class=\"k\">);</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>current<span class=\"k\">.</span>down <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\ttime<span class=\"k\">:</span> Date<span class=\"k\">.</span>now<span class=\"k\">(),</span>","\t\t\t\t\t\tnodes<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\t\t\t\t\tx<span class=\"k\">:</span> e<span class=\"k\">.</span>pageX<span class=\"k\">,</span>","\t\t\t\t\t\ty<span class=\"k\">:</span> e<span class=\"k\">.</span>pageY","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>isActive <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>resetMaxDistance<span class=\"k\">();</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchStart <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\tx<span class=\"k\">:</span> e<span class=\"k\">.</span>pageX<span class=\"k\">,</span>","\t\t\t\t\t\ty<span class=\"k\">:</span> e<span class=\"k\">.</span>pageY","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchMove <span class=\"k\">=</span> that<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchStart<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\tbody<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>evt<span class=\"k\">.</span>move<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchMove <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\t\tx<span class=\"k\">:</span> e<span class=\"k\">.</span>pageX<span class=\"k\">,</span>","\t\t\t\t\t\ty<span class=\"k\">:</span> e<span class=\"k\">.</span>pageY","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>updateMaxDistance<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">}</span>","","\t\t\tbody<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>evt<span class=\"k\">.</span>up<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>current<span class=\"k\">.</span>up<span class=\"k\">.</span>time <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">();</span>","\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>isActive <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","\t\t\tbody<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>evt<span class=\"k\">.</span>out<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>current<span class=\"k\">.</span>up<span class=\"k\">.</span>time <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">();</span>","\t\t\t\tthat<span class=\"k\">.</span>evt<span class=\"k\">.</span>isActive <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tbindBodyScroll<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\tdoc<span class=\"k\">.</span>body<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'touchmove'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>canScroll <span class=\"k\">&amp;&amp;</span> e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\twin<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'load'</span><span class=\"k\">,</span> info<span class=\"k\">.</span>init<span class=\"k\">.</span>bind<span class=\"k\">(</span>info<span class=\"k\">),</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t<span class=\"c\">//=== info end ===//</span>","","\tBro<span class=\"k\">.</span>prototype <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>Array<span class=\"k\">.</span>prototype<span class=\"k\">);</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>html<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>arguments<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> elem<span class=\"k\">.</span>innerHTML <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\telem<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">;</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>attr <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>attribute<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"c\">// try to get attribute</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">===</span> undefined <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> attribute <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>getAttribute<span class=\"k\">(</span>attribute<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>attribute<span class=\"k\">,</span> value<span class=\"k\">);</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>removeAttr <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>attr<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\tnode<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span>attr<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>selector<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"c\">// detect empty selector</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>selector<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\twin<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'load'</span><span class=\"k\">,</span> selector<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"c\">// detect Bro</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>selector <span class=\"k\">instanceof</span> Bro<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> selector<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">var</span> nodes<span class=\"k\">,</span> isHTML<span class=\"k\">,</span> tempNode<span class=\"k\">;</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>re<span class=\"k\">.</span>htmlNode<span class=\"k\">.</span>test<span class=\"k\">(</span>selector<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// create new node</span>","\t\t\t\ttempNode <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">);</span>","\t\t\t\ttempNode<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t\t\t\tnodes <span class=\"k\">=</span> tempNode<span class=\"k\">.</span>childNodes<span class=\"k\">;</span>","\t\t\t\tisHTML <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"c\">// find nodes</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>context <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>querySelectorAll<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">// detect DOMNode or doc</span>","\t\t\t\t\tnodes <span class=\"k\">=</span> context<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>context <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>find<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">// detect bro</span>","\t\t\t\t\tnodes <span class=\"k\">=</span> context<span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"c\">// find in doc</span>","\t\t\t\t\tnodes <span class=\"k\">=</span> doc<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">.</span>call<span class=\"k\">(</span>nodes<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>isHTML <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>context<span class=\"k\">.</span>append<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcontext<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>context<span class=\"k\">.</span>appendChild<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcontext<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"c\">// detect single node</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>selector<span class=\"k\">.</span>nodeType <span class=\"k\">||</span> selector <span class=\"k\">===</span> win <span class=\"k\">||</span> selector <span class=\"k\">===</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>selector <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>push<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t\t<span class=\"c\">// detect nodeList and Array</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> selector<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">'number'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">.</span>call<span class=\"k\">(</span>selector<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>selector <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>context<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>context<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>context <span class=\"k\">=</span> context<span class=\"k\">;</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>isEmpty <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setAttribute <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>attribute<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"c\">// try to set attribute</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> attribute <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>attribute<span class=\"k\">,</span> value<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> key<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> attribute<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>attribute<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\t\tnode<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>key<span class=\"k\">,</span> attribute<span class=\"k\">[</span>key<span class=\"k\">]);</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>find <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>selecotor<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> nodes <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> childes <span class=\"k\">=</span> node<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span>selecotor<span class=\"k\">);</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">.</span>call<span class=\"k\">(</span>childes<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnodes<span class=\"k\">.</span>push<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> Bro<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>append <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>nodes<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>elem<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\tnodes <span class=\"k\">=</span> <span class=\"k\">new</span> Bro<span class=\"k\">(</span>nodes<span class=\"k\">);</span>","","\t\tnodes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\telem<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>appendTo <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>elem<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>elem<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> elem <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\telem <span class=\"k\">=</span> <span class=\"k\">new</span> Bro<span class=\"k\">(</span>elem<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>append<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\telem<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\telem <span class=\"k\">=</span> elem<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">||</span> elem<span class=\"k\">;</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>appendChild<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\telem<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hasClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> has <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\targs <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>toArray<span class=\"k\">(</span>arguments<span class=\"k\">);</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>has<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\targs<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>className<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// this workaround only for old android and io6</span>","\t\t\t\thas <span class=\"k\">=</span> has <span class=\"k\">||</span> node<span class=\"k\">.</span>classList<span class=\"k\">.</span>contains<span class=\"k\">(</span>className<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"c\">// has = node.classList.contains.apply(node.classList, args); // todo: uncommet this in future</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> has<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>addClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> args <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>toArray<span class=\"k\">(</span>arguments<span class=\"k\">);</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\targs<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>className<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// this workaround only for old android and io6</span>","\t\t\t\tnode<span class=\"k\">.</span>classList<span class=\"k\">.</span>add<span class=\"k\">(</span>className<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"c\">//node.classList.add.apply(node.classList, args); // todo: uncommet this in future</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>removeClass <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> args <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>toArray<span class=\"k\">(</span>arguments<span class=\"k\">);</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\targs<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>className<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// this workaround only for old android and io6</span>","\t\t\t\tnode<span class=\"k\">.</span>classList<span class=\"k\">.</span>remove<span class=\"k\">(</span>className<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"c\">//node.classList.remove.apply(node.classList, args); // todo: uncommet this in future</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toggleClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>className<span class=\"k\">,</span> addOrRemove<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>addOrRemove <span class=\"k\">!==</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>addOrRemove<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>addClass<span class=\"k\">(</span>className<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>removeClass<span class=\"k\">(</span>className<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnode<span class=\"k\">.</span>classList<span class=\"k\">.</span>toggle<span class=\"k\">(</span>className<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>each <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>func<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> index<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tfunc<span class=\"k\">.</span>call<span class=\"k\">(</span>node<span class=\"k\">,</span> index<span class=\"k\">,</span> node<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"k\">function</span> pushNode<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tinfo<span class=\"k\">.</span>evt<span class=\"k\">.</span>current<span class=\"k\">.</span>down<span class=\"k\">.</span>nodes<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">function</span> dispatchEventNode<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\tinfo<span class=\"k\">.</span>evt<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>on <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> func<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">var</span> evt<span class=\"k\">,</span> nodes<span class=\"k\">,</span> newType<span class=\"k\">;</span>","","\t\tnewType <span class=\"k\">=</span> info<span class=\"k\">.</span>evt<span class=\"k\">.</span>touchMouseMap<span class=\"k\">[</span>type<span class=\"k\">];</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>isTouch <span class=\"k\">&amp;&amp;</span> newType<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\ttype <span class=\"k\">=</span> newType<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>extraTypes<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>type<span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\ttype <span class=\"k\">=</span> <span class=\"s\">'$'</span> <span class=\"k\">+</span> type <span class=\"k\">+</span> <span class=\"s\">'$'</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">((</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>selector<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>data<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!</span>selector<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// click or click {rr:55}</span>","\t\t\tdata <span class=\"k\">=</span> selector<span class=\"k\">;</span>","","\t\t\tevt <span class=\"k\">=</span> doc<span class=\"k\">.</span>createEvent<span class=\"k\">(</span><span class=\"s\">'Event'</span><span class=\"k\">);</span>   <span class=\"c\">// todo: future use evt = new Event(type);</span>","\t\t\tevt<span class=\"k\">.</span>initEvent<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>      <span class=\"c\">// todo: future use evt = new Event(type);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tevt<span class=\"k\">.</span>data <span class=\"k\">=</span> data<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>dispatchEvent<span class=\"k\">(</span>evt<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\tnodes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// click, func</span>","\t\t\tfunc <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> func <span class=\"k\">===</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// click, 'span', {rr:55}, func</span>","\t\t\tnodes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>selector<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"c\">// click, {rr:55}, func</span>","\t\t\tfunc <span class=\"k\">=</span> data<span class=\"k\">;</span>","\t\t\tdata <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>                                    <span class=\"c\">// click, 'span', func</span>","\t\t\tnodes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t\tfunc <span class=\"k\">=</span> data<span class=\"k\">;</span>","\t\t\tdata <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnodes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>down<span class=\"k\">,</span> pushNode<span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>up<span class=\"k\">,</span> dispatchEventNode<span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>down<span class=\"k\">,</span> pushNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>up<span class=\"k\">,</span> dispatchEventNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","","\t\t\t\tnode<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>type<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">var</span> key<span class=\"k\">,</span> dataObj<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tdataObj <span class=\"k\">=</span> Object<span class=\"k\">.</span>create<span class=\"k\">(</span>data<span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> e<span class=\"k\">.</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>e<span class=\"k\">.</span>data<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\t\tdataObj<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> e<span class=\"k\">.</span>data<span class=\"k\">[</span>key<span class=\"k\">];</span>","\t\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t\te<span class=\"k\">.</span>data <span class=\"k\">=</span> dataObj<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\te<span class=\"k\">.</span>data <span class=\"k\">=</span> data<span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\tfunc<span class=\"k\">.</span>call<span class=\"k\">(</span>node<span class=\"k\">,</span> e<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tnodes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>down<span class=\"k\">,</span> pushNode<span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>up<span class=\"k\">,</span> dispatchEventNode<span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>down<span class=\"k\">,</span> pushNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>info<span class=\"k\">.</span>evt<span class=\"k\">.</span>up<span class=\"k\">,</span> dispatchEventNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t\tnode<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span>type<span class=\"k\">,</span> func<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>off <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> selector<span class=\"k\">,</span> func<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">var</span> nodes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// click, selector, func</span>","\t\t\tnodes <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tfunc <span class=\"k\">=</span> selector<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>type<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnodes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span>type<span class=\"k\">,</span> func<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tnodes<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">,</span> index<span class=\"k\">,</span> arr<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> silentNode <span class=\"k\">=</span> node<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\tarr<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">=</span> silentNode<span class=\"k\">;</span>","\t\t\t\tnode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>replaceChild<span class=\"k\">(</span>silentNode<span class=\"k\">,</span> node<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>remove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>splice<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>show <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnode<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'block'</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hide <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnode<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>css <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>css<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">/// display , block</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>style<span class=\"k\">[</span>css<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> css <span class=\"k\">===</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// display</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span> win<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"k\">null</span><span class=\"k\">)[</span>css<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// {}</span>","\t\t\t<span class=\"k\">var</span> key<span class=\"k\">;</span>","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> css<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>css<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\tnode<span class=\"k\">.</span>style<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> css<span class=\"k\">[</span>key<span class=\"k\">];</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>eq <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>number<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> Bro<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">[</span>number<span class=\"k\">]);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>empty <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tnode<span class=\"k\">.</span>textContent <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>val <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>value<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">.</span>value <span class=\"k\">=</span> value<span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>value <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>data <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>key<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// ()</span>","\t\t\tconsole<span class=\"k\">.</span>warn<span class=\"k\">(</span><span class=\"s\">'dataset - do not support for old android browser'</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>dataset <span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"c\">// some-tome-tone -&gt; someTomeTone</span>","\t\tkey <span class=\"k\">=</span> re<span class=\"k\">.</span>xToX<span class=\"k\">(</span>key<span class=\"k\">);</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> key <span class=\"k\">===</span> <span class=\"s\">'string'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>value <span class=\"k\">!==</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// 'key'</span>","","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>value<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\tvalue <span class=\"k\">=</span> JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>value<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tnode<span class=\"k\">.</span>dataset<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tvalue <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>dataset<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>re<span class=\"k\">.</span>json<span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">try</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>dataset<span class=\"k\">[</span>key<span class=\"k\">]);</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">return</span> value<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">return</span> value<span class=\"k\">;</span>","","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> i<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> key<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>key<span class=\"k\">[</span>i<span class=\"k\">]))</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tnode<span class=\"k\">.</span>dataset<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>key<span class=\"k\">[</span>i<span class=\"k\">]);</span>","\t\t\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\t\t\tnode<span class=\"k\">.</span>dataset<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> key<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>prop <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>key<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> key <span class=\"k\">===</span> <span class=\"s\">'string'</span> <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">][</span>key<span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span> <span class=\"c\">// {},</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> i<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> key<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>key<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\t\tnode<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> key<span class=\"k\">[</span>i<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">}</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">'function'</span><span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"c\">// 'checked', function</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">,</span> index<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\tnode<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">.</span>call<span class=\"k\">(</span>node<span class=\"k\">,</span> index<span class=\"k\">,</span> node<span class=\"k\">[</span>key<span class=\"k\">]);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">this</span><span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"c\">// 'checked', some value</span>","\t\t\tnode<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t<span class=\"c\">// util section</span>","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>template <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> Function<span class=\"k\">(</span><span class=\"s\">\"obj\"</span><span class=\"k\">,</span>","\t\t\t\t<span class=\"s\">\"var p=[]; with(obj){p.push('\"</span> <span class=\"k\">+</span> str","\t\t\t\t<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[\\r\\t\\n]/g</span><span class=\"k\">,</span> <span class=\"s\">\" \"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"&lt;%\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\t</span><span class=\"s\">\"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/((^|%&gt;)[^\\t]*)'/g</span><span class=\"k\">,</span> <span class=\"s\">\"$1</span><span class=\"t\">\\r</span><span class=\"s\">\"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\t=([\\s\\S]*?)%&gt;/g</span><span class=\"k\">,</span> <span class=\"s\">\"',$1,'\"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\t</span><span class=\"s\">\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"');\"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"%&gt;\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"p.push('\"</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\r</span><span class=\"s\">\"</span><span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">'\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"');} return p.join('');\"</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toArray <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>arr<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> Array<span class=\"k\">.</span>prototype<span class=\"k\">.</span>slice<span class=\"k\">.</span>call<span class=\"k\">(</span>arr<span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>inArray <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>arr<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> arr<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>shuffle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>arr<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> arr<span class=\"k\">.</span>sort<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">-</span> <span class=\"s\">0.5</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>duplicate <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>obj<span class=\"k\">));</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>isPlainObject <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> obj <span class=\"k\">&amp;&amp;</span> obj<span class=\"k\">.</span>constructor <span class=\"k\">===</span> Object<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>isEmptyObject <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span>obj<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> <span class=\"k\">!</span>Object<span class=\"k\">.</span>keys<span class=\"k\">(</span>obj<span class=\"k\">).</span>length<span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>screen <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\t\twidth <span class=\"k\">=</span> docElem<span class=\"k\">.</span>clientWidth<span class=\"k\">,</span>","\t\t\theight <span class=\"k\">=</span> docElem<span class=\"k\">.</span>clientHeight<span class=\"k\">;</span>","","\t\tdata<span class=\"k\">.</span>width <span class=\"k\">=</span> width<span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>height <span class=\"k\">=</span> height<span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>orientation <span class=\"k\">=</span> width <span class=\"k\">&gt;</span> height <span class=\"k\">?</span> <span class=\"s\">'landscape'</span> <span class=\"k\">:</span> <span class=\"s\">'portrait'</span><span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>aspectRatio <span class=\"k\">=</span> width <span class=\"k\">/</span> height<span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>smallestSide <span class=\"k\">=</span> width <span class=\"k\">&gt;</span> height <span class=\"k\">?</span> height <span class=\"k\">:</span> width<span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>biggestSide <span class=\"k\">=</span> width <span class=\"k\">&lt;</span> height <span class=\"k\">?</span> height <span class=\"k\">:</span> width<span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>center <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\tx<span class=\"k\">:</span> width <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">,</span>","\t\t\ty<span class=\"k\">:</span> height <span class=\"k\">/</span> <span class=\"s\">2</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">return</span> data<span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>setBodyScroll <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>canScroll<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tinfo<span class=\"k\">.</span>canScroll <span class=\"k\">=</span> canScroll<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>vendorPrefix <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\tcss<span class=\"k\">:</span> <span class=\"s\">'-webkit-'</span><span class=\"k\">,</span>","\t\t\tjs<span class=\"k\">:</span> <span class=\"s\">'webkit'</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\tBro<span class=\"k\">.</span>prototype<span class=\"k\">.</span>ajax <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\tdata<span class=\"k\">.</span>type <span class=\"k\">=</span> data<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">'GET'</span><span class=\"k\">;</span>","","\t\tdata<span class=\"k\">.</span>success <span class=\"k\">=</span> data<span class=\"k\">.</span>success <span class=\"k\">||</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>","\t\tdata<span class=\"k\">.</span>error <span class=\"k\">=</span> data<span class=\"k\">.</span>error <span class=\"k\">||</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{}</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">var</span> xhr <span class=\"k\">=</span> <span class=\"k\">new</span> XMLHttpRequest<span class=\"k\">();</span>","","\t\txhr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span> xhr<span class=\"k\">.</span>readyState <span class=\"k\">!==</span> <span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>xhr<span class=\"k\">.</span>status <span class=\"k\">!==</span> <span class=\"s\">200</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tdata<span class=\"k\">.</span>error<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tdata<span class=\"k\">.</span>success<span class=\"k\">(</span>xhr<span class=\"k\">.</span>responseText<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t<span class=\"k\">switch</span> <span class=\"k\">(</span>data<span class=\"k\">.</span>type<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">case</span> <span class=\"s\">'GET'</span><span class=\"k\">:</span>","\t\t\t\txhr<span class=\"k\">.</span>open<span class=\"k\">(</span>data<span class=\"k\">.</span>type<span class=\"k\">,</span> data<span class=\"k\">.</span>url<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","\t\t\t\txhr<span class=\"k\">.</span>send<span class=\"k\">(</span><span class=\"k\">null</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">break</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">default</span> <span class=\"k\">:</span>","\t\t\t\tconsole<span class=\"k\">.</span>warn<span class=\"k\">(</span><span class=\"s\">'not supported type of ajax request'</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">return</span> xhr<span class=\"k\">;</span>","","\t<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">(</span>window<span class=\"k\">,</span> document<span class=\"k\">,</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">));</span>"];
_$jscoverage['js/lib/bro.js'][1]++;
(function (win, doc, docElem) {
  _$jscoverage['js/lib/bro.js'][3]++;
  "use strict";
  _$jscoverage['js/lib/bro.js'][6]++;
  var isTouch, info, bro, Bro, re;
  _$jscoverage['js/lib/bro.js'][8]++;
  Bro = (function (selector, context) {
  _$jscoverage['js/lib/bro.js'][12]++;
  if ((selector instanceof Bro)) {
    _$jscoverage['js/lib/bro.js'][13]++;
    return selector;
  }
  _$jscoverage['js/lib/bro.js'][15]++;
  this.init(selector, context);
});
  _$jscoverage['js/lib/bro.js'][18]++;
  bro = (function (selector, context) {
  _$jscoverage['js/lib/bro.js'][19]++;
  return new Bro(selector, context);
});
  _$jscoverage['js/lib/bro.js'][22]++;
  win.$ = bro;
  _$jscoverage['js/lib/bro.js'][25]++;
  re = {htmlNode: /(^|\s+)<[\s\S]+>($|\s+)/, json: /(^|\s+)\{[\s\S]*\}($|\s+)/, xToX: (function (str) {
  _$jscoverage['js/lib/bro.js'][29]++;
  return str.replace(/-\w/gi, Function.prototype.call.bind(String.prototype.toUpperCase)).replace(/-/gi, "");
})};
  _$jscoverage['js/lib/bro.js'][40]++;
  isTouch = docElem.hasOwnProperty("ontouchstart");
  _$jscoverage['js/lib/bro.js'][43]++;
  info = {isPhone: false, isTouch: isTouch, preCSS: "-webkit-", preJS: "webkit", canScroll: true, isAndroid: /android/i.test(win.navigator.userAgent), evt: {down: (isTouch? "touchstart": "mousedown"), move: (isTouch? "touchmove": "mousemove"), up: (isTouch? "touchend": "mouseup"), out: (isTouch? "touchcancel": "mouseout"), touchStart: {x: 0, y: 0}, touchMove: {x: 0, y: 0}, maxDistance: {x: 0, y: 0}, updateMaxDistance: (function () {
  _$jscoverage['js/lib/bro.js'][68]++;
  this.maxDistance.x = Math.max(this.maxDistance.x, Math.abs((this.touchMove.x - this.touchStart.x)));
  _$jscoverage['js/lib/bro.js'][69]++;
  this.maxDistance.y = Math.max(this.maxDistance.y, Math.abs((this.touchMove.y - this.touchStart.y)));
}), resetMaxDistance: (function () {
  _$jscoverage['js/lib/bro.js'][72]++;
  this.maxDistance = {x: 0, y: 0};
}), before: {down: {nodes: [], time: 0}, up: {nodes: [], time: 0}, click: {time: 0, x: NaN, y: NaN}}, current: {down: {nodes: [], time: 0}, up: {nodes: [], time: 0}, click: {time: 0, x: NaN, y: NaN}}, defaultEventContainer: {down: {nodes: [], time: 0}, up: {nodes: [], time: 0}, click: {time: 0, x: NaN, y: NaN}}, extraTypes: ["click", "dblclick", "hold", "swipe"], touchTypes: ["mousedown", "mousemove", "mouseup", "mouseout"], touchMouseMap: {mousedown: "touchstart", mousemove: "touchmove", mouseup: "touchend", mouseout: "touchcancel"}, isActive: false, isClick: (function () {
  _$jscoverage['js/lib/bro.js'][132]++;
  return (Math.max(this.maxDistance.x, this.maxDistance.y) < 5);
}), dispatchEvent: (function (node) {
  _$jscoverage['js/lib/bro.js'][136]++;
  var now = Date.now(), evt, dX, dY, direction;
  _$jscoverage['js/lib/bro.js'][141]++;
  if ((this.current.down.nodes.indexOf(node) === -1)) {
    _$jscoverage['js/lib/bro.js'][142]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][146]++;
  if ((((now - this.current.down.time) < 600) && (Math.max(this.maxDistance.x, this.maxDistance.y) > 60))) {
    _$jscoverage['js/lib/bro.js'][148]++;
    dX = (this.current.down.x - this.touchMove.x);
    _$jscoverage['js/lib/bro.js'][149]++;
    dY = (this.current.down.y - this.touchMove.y);
    _$jscoverage['js/lib/bro.js'][151]++;
    if ((Math.abs(dX) > Math.abs(dY))) {
      _$jscoverage['js/lib/bro.js'][152]++;
      direction = ((dX > 0)? "left": "right");
    }
    else {
      _$jscoverage['js/lib/bro.js'][154]++;
      direction = ((dY > 0)? "up": "down");
    }
    _$jscoverage['js/lib/bro.js'][157]++;
    evt = doc.createEvent("Event");
    _$jscoverage['js/lib/bro.js'][158]++;
    evt.direction = direction;
    _$jscoverage['js/lib/bro.js'][159]++;
    evt.initEvent("$swipe$", true, true);
    _$jscoverage['js/lib/bro.js'][160]++;
    node.dispatchEvent(evt);
  }
  _$jscoverage['js/lib/bro.js'][165]++;
  if ((! this.isClick())) {
    _$jscoverage['js/lib/bro.js'][166]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][170]++;
  if (((now - this.current.down.time) > 300)) {
    _$jscoverage['js/lib/bro.js'][171]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][174]++;
  evt = doc.createEvent("Event");
  _$jscoverage['js/lib/bro.js'][175]++;
  evt.initEvent("$click$", true, true);
  _$jscoverage['js/lib/bro.js'][176]++;
  node.dispatchEvent(evt);
  _$jscoverage['js/lib/bro.js'][179]++;
  this.before.click = Object.create(this.current.click);
  _$jscoverage['js/lib/bro.js'][180]++;
  this.current.click = {time: now, x: this.touchMove.x, y: this.touchMove.y};
  _$jscoverage['js/lib/bro.js'][187]++;
  if (((this.current.click.time - this.before.click.time) > 300)) {
    _$jscoverage['js/lib/bro.js'][188]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][192]++;
  if ((Math.max(Math.abs((this.before.click.x - this.current.click.x)), Math.abs((this.before.click.y - this.current.click.y))) > 10)) {
    _$jscoverage['js/lib/bro.js'][193]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][196]++;
  evt = doc.createEvent("Event");
  _$jscoverage['js/lib/bro.js'][197]++;
  evt.initEvent("$dblclick$", true, true);
  _$jscoverage['js/lib/bro.js'][198]++;
  node.dispatchEvent(evt);
}), detectHold: (function () {
  _$jscoverage['js/lib/bro.js'][204]++;
  var evt;
  _$jscoverage['js/lib/bro.js'][205]++;
  if ((((Date.now() - this.current.up.time) < this.holdPeriod) || (! this.isClick()))) {
    _$jscoverage['js/lib/bro.js'][206]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][209]++;
  evt = doc.createEvent("Event");
  _$jscoverage['js/lib/bro.js'][210]++;
  evt.initEvent("$hold$", true, true);
  _$jscoverage['js/lib/bro.js'][211]++;
  this.current.down.nodes.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][212]++;
  node.dispatchEvent(evt);
}));
}), holdPeriod: 500}, screen: {getWidth: (function () {
  _$jscoverage['js/lib/bro.js'][220]++;
  return docElem.clientWidth;
}), getHeight: (function () {
  _$jscoverage['js/lib/bro.js'][223]++;
  return docElem.clientHeight;
}), getAspectRatio: (function () {
  _$jscoverage['js/lib/bro.js'][226]++;
  return (docElem.clientWidth / docElem.clientHeight);
})}, init: (function () {
  _$jscoverage['js/lib/bro.js'][230]++;
  this.getIsPhone();
  _$jscoverage['js/lib/bro.js'][231]++;
  this.runDetector();
  _$jscoverage['js/lib/bro.js'][232]++;
  this.bindBodyScroll();
}), getIsPhone: (function () {
  _$jscoverage['js/lib/bro.js'][235]++;
  this.isPhone = (Math.max(docElem.clientWidth, docElem.clientHeight) < 700);
  _$jscoverage['js/lib/bro.js'][236]++;
  return this.isPhone;
}), runDetector: (function () {
  _$jscoverage['js/lib/bro.js'][240]++;
  var body = doc.body, that = this;
  _$jscoverage['js/lib/bro.js'][244]++;
  if (this.isTouch) {
    _$jscoverage['js/lib/bro.js'][246]++;
    body.addEventListener(this.evt.down, (function (e) {
  _$jscoverage['js/lib/bro.js'][247]++;
  that.evt.current.down = {time: Date.now(), nodes: [], x: e.touches[0].pageX, y: e.touches[0].pageY};
  _$jscoverage['js/lib/bro.js'][254]++;
  win.setTimeout(that.evt.detectHold.bind(that.evt), that.evt.holdPeriod);
  _$jscoverage['js/lib/bro.js'][256]++;
  that.evt.isActive = true;
  _$jscoverage['js/lib/bro.js'][257]++;
  that.evt.resetMaxDistance();
  _$jscoverage['js/lib/bro.js'][258]++;
  that.evt.touchStart = {x: e.touches[0].pageX, y: e.touches[0].pageY};
  _$jscoverage['js/lib/bro.js'][262]++;
  that.evt.touchMove = that.evt.touchStart;
}), true);
    _$jscoverage['js/lib/bro.js'][264]++;
    body.addEventListener(this.evt.move, (function (e) {
  _$jscoverage['js/lib/bro.js'][265]++;
  that.evt.touchMove = {x: e.touches[0].pageX, y: e.touches[0].pageY};
  _$jscoverage['js/lib/bro.js'][269]++;
  that.evt.updateMaxDistance();
}), true);
  }
  else {
    _$jscoverage['js/lib/bro.js'][274]++;
    body.addEventListener(this.evt.down, (function (e) {
  _$jscoverage['js/lib/bro.js'][275]++;
  win.setTimeout(that.evt.detectHold.bind(that.evt), that.evt.holdPeriod);
  _$jscoverage['js/lib/bro.js'][276]++;
  that.evt.current.down = {time: Date.now(), nodes: [], x: e.pageX, y: e.pageY};
  _$jscoverage['js/lib/bro.js'][283]++;
  that.evt.isActive = true;
  _$jscoverage['js/lib/bro.js'][284]++;
  that.evt.resetMaxDistance();
  _$jscoverage['js/lib/bro.js'][285]++;
  that.evt.touchStart = {x: e.pageX, y: e.pageY};
  _$jscoverage['js/lib/bro.js'][289]++;
  that.evt.touchMove = that.evt.touchStart;
}), true);
    _$jscoverage['js/lib/bro.js'][291]++;
    body.addEventListener(this.evt.move, (function (e) {
  _$jscoverage['js/lib/bro.js'][292]++;
  that.evt.touchMove = {x: e.pageX, y: e.pageY};
  _$jscoverage['js/lib/bro.js'][296]++;
  that.evt.updateMaxDistance();
}), true);
  }
  _$jscoverage['js/lib/bro.js'][301]++;
  body.addEventListener(this.evt.up, (function () {
  _$jscoverage['js/lib/bro.js'][302]++;
  that.evt.current.up.time = Date.now();
  _$jscoverage['js/lib/bro.js'][303]++;
  that.evt.isActive = false;
}), true);
  _$jscoverage['js/lib/bro.js'][306]++;
  body.addEventListener(this.evt.out, (function () {
  _$jscoverage['js/lib/bro.js'][307]++;
  that.evt.current.up.time = Date.now();
  _$jscoverage['js/lib/bro.js'][308]++;
  that.evt.isActive = false;
}), true);
}), bindBodyScroll: (function () {
  _$jscoverage['js/lib/bro.js'][313]++;
  doc.body.addEventListener("touchmove", (function (e) {
  _$jscoverage['js/lib/bro.js'][314]++;
  return ((! this.canScroll) && e.preventDefault());
}).bind(this), false);
})};
  _$jscoverage['js/lib/bro.js'][320]++;
  win.addEventListener("load", info.init.bind(info), false);
  _$jscoverage['js/lib/bro.js'][323]++;
  Bro.prototype = Object.create(Array.prototype);
  _$jscoverage['js/lib/bro.js'][325]++;
  Bro.prototype.html = (function (html) {
  _$jscoverage['js/lib/bro.js'][326]++;
  var elem = (this[0] || {});
  _$jscoverage['js/lib/bro.js'][327]++;
  if ((! arguments.length)) {
    _$jscoverage['js/lib/bro.js'][328]++;
    return (elem.innerHTML || "");
  }
  _$jscoverage['js/lib/bro.js'][330]++;
  elem.innerHTML = html;
  _$jscoverage['js/lib/bro.js'][331]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][334]++;
  Bro.prototype.attr = (function (attribute, value) {
  _$jscoverage['js/lib/bro.js'][337]++;
  if (((value === undefined) && ((typeof attribute) === "string"))) {
    _$jscoverage['js/lib/bro.js'][338]++;
    if ((! this.length)) {
      _$jscoverage['js/lib/bro.js'][339]++;
      return "";
    }
    _$jscoverage['js/lib/bro.js'][341]++;
    return this[0].getAttribute(attribute);
  }
  _$jscoverage['js/lib/bro.js'][344]++;
  this.setAttribute(attribute, value);
  _$jscoverage['js/lib/bro.js'][346]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][350]++;
  Bro.prototype.removeAttr = (function (attr) {
  _$jscoverage['js/lib/bro.js'][351]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][352]++;
  node.removeAttribute(attr);
}));
});
  _$jscoverage['js/lib/bro.js'][356]++;
  Bro.prototype.init = (function (selector, context) {
  _$jscoverage['js/lib/bro.js'][359]++;
  if ((! selector)) {
    _$jscoverage['js/lib/bro.js'][360]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][363]++;
  if (((typeof selector) === "function")) {
    _$jscoverage['js/lib/bro.js'][364]++;
    win.addEventListener("load", selector, false);
    _$jscoverage['js/lib/bro.js'][365]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][369]++;
  if ((selector instanceof Bro)) {
    _$jscoverage['js/lib/bro.js'][370]++;
    return selector;
  }
  _$jscoverage['js/lib/bro.js'][373]++;
  if (((typeof selector) === "string")) {
    _$jscoverage['js/lib/bro.js'][375]++;
    var nodes, isHTML, tempNode;
    _$jscoverage['js/lib/bro.js'][376]++;
    if (re.htmlNode.test(selector)) {
      _$jscoverage['js/lib/bro.js'][378]++;
      tempNode = doc.createElement("div");
      _$jscoverage['js/lib/bro.js'][379]++;
      tempNode.innerHTML = selector;
      _$jscoverage['js/lib/bro.js'][380]++;
      nodes = tempNode.childNodes;
      _$jscoverage['js/lib/bro.js'][381]++;
      isHTML = true;
    }
    else {
      _$jscoverage['js/lib/bro.js'][384]++;
      if ((context && context.querySelectorAll)) {
        _$jscoverage['js/lib/bro.js'][386]++;
        nodes = context.querySelectorAll(selector);
      }
      else {
        _$jscoverage['js/lib/bro.js'][387]++;
        if ((context && context.find)) {
          _$jscoverage['js/lib/bro.js'][389]++;
          nodes = context.find(selector);
        }
        else {
          _$jscoverage['js/lib/bro.js'][392]++;
          nodes = doc.querySelectorAll(selector);
        }
      }
    }
    _$jscoverage['js/lib/bro.js'][396]++;
    this.forEach.call(nodes, (function (node) {
  _$jscoverage['js/lib/bro.js'][397]++;
  this.push(node);
}), this);
    _$jscoverage['js/lib/bro.js'][400]++;
    if ((isHTML && context)) {
      _$jscoverage['js/lib/bro.js'][401]++;
      if (context.append) {
        _$jscoverage['js/lib/bro.js'][402]++;
        context.append(this);
      }
      else {
        _$jscoverage['js/lib/bro.js'][403]++;
        if (context.appendChild) {
          _$jscoverage['js/lib/bro.js'][404]++;
          this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][405]++;
  context.appendChild(node);
}));
        }
      }
    }
  }
  else {
    _$jscoverage['js/lib/bro.js'][411]++;
    if ((selector.nodeType || (selector === win) || (selector === doc))) {
      _$jscoverage['js/lib/bro.js'][412]++;
      this.selector = selector;
      _$jscoverage['js/lib/bro.js'][413]++;
      this.push(selector);
    }
    else {
      _$jscoverage['js/lib/bro.js'][415]++;
      if (((typeof selector.length) === "number")) {
        _$jscoverage['js/lib/bro.js'][416]++;
        this.forEach.call(selector, (function (node) {
  _$jscoverage['js/lib/bro.js'][417]++;
  this.push(node);
}), this);
        _$jscoverage['js/lib/bro.js'][419]++;
        this.selector = selector;
      }
    }
  }
  _$jscoverage['js/lib/bro.js'][422]++;
  if (this.isPlainObject(context)) {
    _$jscoverage['js/lib/bro.js'][423]++;
    this.setAttribute(context);
  }
  _$jscoverage['js/lib/bro.js'][426]++;
  this.context = context;
  _$jscoverage['js/lib/bro.js'][428]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][432]++;
  Bro.prototype.isEmpty = (function () {
  _$jscoverage['js/lib/bro.js'][433]++;
  return (! this.length);
});
  _$jscoverage['js/lib/bro.js'][436]++;
  Bro.prototype.setAttribute = (function (attribute, value) {
  _$jscoverage['js/lib/bro.js'][439]++;
  if (((typeof attribute) === "string")) {
    _$jscoverage['js/lib/bro.js'][440]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][441]++;
  node.setAttribute(attribute, value);
}));
  }
  else {
    _$jscoverage['js/lib/bro.js'][444]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][445]++;
  var key;
  _$jscoverage['js/lib/bro.js'][446]++;
  for (key in attribute) {
    _$jscoverage['js/lib/bro.js'][447]++;
    if (attribute.hasOwnProperty(key)) {
      _$jscoverage['js/lib/bro.js'][448]++;
      node.setAttribute(key, attribute[key]);
    }
}
}));
  }
  _$jscoverage['js/lib/bro.js'][454]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][458]++;
  Bro.prototype.find = (function (selecotor) {
  _$jscoverage['js/lib/bro.js'][459]++;
  var nodes = [];
  _$jscoverage['js/lib/bro.js'][460]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][461]++;
  var childes = node.querySelectorAll(selecotor);
  _$jscoverage['js/lib/bro.js'][462]++;
  this.forEach.call(childes, (function (node) {
  _$jscoverage['js/lib/bro.js'][463]++;
  nodes.push(node);
}));
}), this);
  _$jscoverage['js/lib/bro.js'][466]++;
  return new Bro(nodes);
});
  _$jscoverage['js/lib/bro.js'][469]++;
  Bro.prototype.append = (function (nodes) {
  _$jscoverage['js/lib/bro.js'][470]++;
  var elem = this[0];
  _$jscoverage['js/lib/bro.js'][472]++;
  if ((! elem)) {
    _$jscoverage['js/lib/bro.js'][473]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][476]++;
  nodes = new Bro(nodes);
  _$jscoverage['js/lib/bro.js'][478]++;
  nodes.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][479]++;
  elem.appendChild(node);
}));
  _$jscoverage['js/lib/bro.js'][482]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][486]++;
  Bro.prototype.appendTo = (function (elem) {
  _$jscoverage['js/lib/bro.js'][488]++;
  if ((! elem)) {
    _$jscoverage['js/lib/bro.js'][489]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][492]++;
  if (((typeof elem) === "string")) {
    _$jscoverage['js/lib/bro.js'][493]++;
    elem = new Bro(elem);
  }
  _$jscoverage['js/lib/bro.js'][496]++;
  if (elem.append) {
    _$jscoverage['js/lib/bro.js'][497]++;
    elem.append(this);
    _$jscoverage['js/lib/bro.js'][498]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][501]++;
  elem = (elem[0] || elem);
  _$jscoverage['js/lib/bro.js'][502]++;
  if (elem.appendChild) {
    _$jscoverage['js/lib/bro.js'][503]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][504]++;
  elem.appendChild(node);
}));
  }
  _$jscoverage['js/lib/bro.js'][508]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][512]++;
  Bro.prototype.hasClass = (function () {
  _$jscoverage['js/lib/bro.js'][513]++;
  var has = false, args = this.toArray(arguments);
  _$jscoverage['js/lib/bro.js'][515]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][516]++;
  if (has) {
    _$jscoverage['js/lib/bro.js'][517]++;
    return;
  }
  _$jscoverage['js/lib/bro.js'][519]++;
  args.forEach((function (className) {
  _$jscoverage['js/lib/bro.js'][520]++;
  has = (has || node.classList.contains(className));
}));
}));
  _$jscoverage['js/lib/bro.js'][524]++;
  return has;
});
  _$jscoverage['js/lib/bro.js'][527]++;
  Bro.prototype.addClass = (function () {
  _$jscoverage['js/lib/bro.js'][528]++;
  var args = this.toArray(arguments);
  _$jscoverage['js/lib/bro.js'][529]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][530]++;
  args.forEach((function (className) {
  _$jscoverage['js/lib/bro.js'][531]++;
  node.classList.add(className);
}));
}));
  _$jscoverage['js/lib/bro.js'][535]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][538]++;
  Bro.prototype.removeClass = (function () {
  _$jscoverage['js/lib/bro.js'][539]++;
  var args = this.toArray(arguments);
  _$jscoverage['js/lib/bro.js'][540]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][541]++;
  args.forEach((function (className) {
  _$jscoverage['js/lib/bro.js'][542]++;
  node.classList.remove(className);
}));
}));
  _$jscoverage['js/lib/bro.js'][546]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][549]++;
  Bro.prototype.toggleClass = (function (className, addOrRemove) {
  _$jscoverage['js/lib/bro.js'][551]++;
  if ((addOrRemove !== undefined)) {
    _$jscoverage['js/lib/bro.js'][552]++;
    if (addOrRemove) {
      _$jscoverage['js/lib/bro.js'][553]++;
      this.addClass(className);
    }
    else {
      _$jscoverage['js/lib/bro.js'][555]++;
      this.removeClass(className);
    }
    _$jscoverage['js/lib/bro.js'][557]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][560]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][561]++;
  node.classList.toggle(className);
}));
  _$jscoverage['js/lib/bro.js'][564]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][568]++;
  Bro.prototype.each = (function (func) {
  _$jscoverage['js/lib/bro.js'][569]++;
  this.forEach((function (node, index) {
  _$jscoverage['js/lib/bro.js'][570]++;
  func.call(node, index, node);
}), this);
  _$jscoverage['js/lib/bro.js'][573]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][577]++;
  function pushNode() {
    _$jscoverage['js/lib/bro.js'][578]++;
    info.evt.current.down.nodes.push(this);
}
  _$jscoverage['js/lib/bro.js'][581]++;
  function dispatchEventNode() {
    _$jscoverage['js/lib/bro.js'][582]++;
    info.evt.dispatchEvent(this);
}
  _$jscoverage['js/lib/bro.js'][585]++;
  Bro.prototype.on = (function (type, selector, data, func) {
  _$jscoverage['js/lib/bro.js'][587]++;
  var evt, nodes, newType;
  _$jscoverage['js/lib/bro.js'][589]++;
  newType = info.evt.touchMouseMap[type];
  _$jscoverage['js/lib/bro.js'][591]++;
  if ((isTouch && newType)) {
    _$jscoverage['js/lib/bro.js'][592]++;
    type = newType;
  }
  _$jscoverage['js/lib/bro.js'][595]++;
  if ((info.evt.extraTypes.indexOf(type) !== -1)) {
    _$jscoverage['js/lib/bro.js'][596]++;
    type = ("$" + type + "$");
  }
  _$jscoverage['js/lib/bro.js'][599]++;
  if (((this.isPlainObject(selector) && (! data)) || (! selector))) {
    _$jscoverage['js/lib/bro.js'][600]++;
    data = selector;
    _$jscoverage['js/lib/bro.js'][602]++;
    evt = doc.createEvent("Event");
    _$jscoverage['js/lib/bro.js'][603]++;
    evt.initEvent(type, true, true);
    _$jscoverage['js/lib/bro.js'][605]++;
    if (data) {
      _$jscoverage['js/lib/bro.js'][606]++;
      evt.data = data;
    }
    _$jscoverage['js/lib/bro.js'][608]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][609]++;
  node.dispatchEvent(evt);
}));
    _$jscoverage['js/lib/bro.js'][611]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][614]++;
  nodes = this;
  _$jscoverage['js/lib/bro.js'][616]++;
  if (((typeof selector) === "function")) {
    _$jscoverage['js/lib/bro.js'][617]++;
    func = selector;
  }
  else {
    _$jscoverage['js/lib/bro.js'][618]++;
    if (((typeof func) === "function")) {
      _$jscoverage['js/lib/bro.js'][619]++;
      nodes = this.find(selector);
    }
    else {
      _$jscoverage['js/lib/bro.js'][620]++;
      if (this.isPlainObject(selector)) {
        _$jscoverage['js/lib/bro.js'][621]++;
        func = data;
        _$jscoverage['js/lib/bro.js'][622]++;
        data = selector;
      }
      else {
        _$jscoverage['js/lib/bro.js'][624]++;
        nodes = this.find(selector);
        _$jscoverage['js/lib/bro.js'][625]++;
        func = data;
        _$jscoverage['js/lib/bro.js'][626]++;
        data = undefined;
      }
    }
  }
  _$jscoverage['js/lib/bro.js'][629]++;
  if (data) {
    _$jscoverage['js/lib/bro.js'][630]++;
    nodes.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][631]++;
  node.removeEventListener(info.evt.down, pushNode);
  _$jscoverage['js/lib/bro.js'][632]++;
  node.removeEventListener(info.evt.up, dispatchEventNode);
  _$jscoverage['js/lib/bro.js'][633]++;
  node.addEventListener(info.evt.down, pushNode, false);
  _$jscoverage['js/lib/bro.js'][634]++;
  node.addEventListener(info.evt.up, dispatchEventNode, false);
  _$jscoverage['js/lib/bro.js'][636]++;
  node.addEventListener(type, (function (e) {
  _$jscoverage['js/lib/bro.js'][637]++;
  var key, dataObj;
  _$jscoverage['js/lib/bro.js'][638]++;
  if (e.data) {
    _$jscoverage['js/lib/bro.js'][639]++;
    dataObj = Object.create(data);
    _$jscoverage['js/lib/bro.js'][640]++;
    for (key in e.data) {
      _$jscoverage['js/lib/bro.js'][641]++;
      if (e.data.hasOwnProperty(key)) {
        _$jscoverage['js/lib/bro.js'][642]++;
        dataObj[key] = e.data[key];
      }
}
    _$jscoverage['js/lib/bro.js'][645]++;
    e.data = dataObj;
  }
  else {
    _$jscoverage['js/lib/bro.js'][647]++;
    e.data = data;
  }
  _$jscoverage['js/lib/bro.js'][649]++;
  func.call(node, e);
}), false);
}));
  }
  else {
    _$jscoverage['js/lib/bro.js'][653]++;
    nodes.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][654]++;
  node.removeEventListener(info.evt.down, pushNode);
  _$jscoverage['js/lib/bro.js'][655]++;
  node.removeEventListener(info.evt.up, dispatchEventNode);
  _$jscoverage['js/lib/bro.js'][656]++;
  node.addEventListener(info.evt.down, pushNode, false);
  _$jscoverage['js/lib/bro.js'][657]++;
  node.addEventListener(info.evt.up, dispatchEventNode, false);
  _$jscoverage['js/lib/bro.js'][658]++;
  node.addEventListener(type, func, false);
}));
  }
  _$jscoverage['js/lib/bro.js'][662]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][666]++;
  Bro.prototype.off = (function (type, selector, func) {
  _$jscoverage['js/lib/bro.js'][668]++;
  var nodes = this;
  _$jscoverage['js/lib/bro.js'][670]++;
  if (((typeof selector) === "string")) {
    _$jscoverage['js/lib/bro.js'][671]++;
    nodes = this.find(selector);
  }
  else {
    _$jscoverage['js/lib/bro.js'][673]++;
    func = selector;
  }
  _$jscoverage['js/lib/bro.js'][676]++;
  if (type) {
    _$jscoverage['js/lib/bro.js'][677]++;
    nodes.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][678]++;
  node.removeEventListener(type, func);
}));
  }
  else {
    _$jscoverage['js/lib/bro.js'][681]++;
    nodes.forEach((function (node, index, arr) {
  _$jscoverage['js/lib/bro.js'][682]++;
  var silentNode = node.cloneNode(true);
  _$jscoverage['js/lib/bro.js'][683]++;
  arr[index] = silentNode;
  _$jscoverage['js/lib/bro.js'][684]++;
  node.parentNode.replaceChild(silentNode, node);
}));
  }
  _$jscoverage['js/lib/bro.js'][688]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][692]++;
  Bro.prototype.remove = (function () {
  _$jscoverage['js/lib/bro.js'][693]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][694]++;
  node.parentNode.removeChild(node);
}), this);
  _$jscoverage['js/lib/bro.js'][696]++;
  this.splice(0, this.length);
  _$jscoverage['js/lib/bro.js'][697]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][700]++;
  Bro.prototype.show = (function () {
  _$jscoverage['js/lib/bro.js'][701]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][702]++;
  node.style.display = "block";
}));
  _$jscoverage['js/lib/bro.js'][704]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][707]++;
  Bro.prototype.hide = (function () {
  _$jscoverage['js/lib/bro.js'][708]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][709]++;
  node.style.display = "none";
}));
  _$jscoverage['js/lib/bro.js'][711]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][714]++;
  Bro.prototype.css = (function (css, value) {
  _$jscoverage['js/lib/bro.js'][716]++;
  if (((typeof value) === "string")) {
    _$jscoverage['js/lib/bro.js'][717]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][718]++;
  node.style[css] = value;
}));
    _$jscoverage['js/lib/bro.js'][720]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][723]++;
  if (((typeof css) === "string")) {
    _$jscoverage['js/lib/bro.js'][724]++;
    if (this.length) {
      _$jscoverage['js/lib/bro.js'][725]++;
      return win.getComputedStyle(this[0], null)[css];
    }
    _$jscoverage['js/lib/bro.js'][727]++;
    return "";
  }
  _$jscoverage['js/lib/bro.js'][730]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][731]++;
  var key;
  _$jscoverage['js/lib/bro.js'][732]++;
  for (key in css) {
    _$jscoverage['js/lib/bro.js'][733]++;
    if (css.hasOwnProperty(key)) {
      _$jscoverage['js/lib/bro.js'][734]++;
      node.style[key] = css[key];
    }
}
}));
  _$jscoverage['js/lib/bro.js'][739]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][743]++;
  Bro.prototype.eq = (function (number) {
  _$jscoverage['js/lib/bro.js'][744]++;
  return new Bro(this[number]);
});
  _$jscoverage['js/lib/bro.js'][747]++;
  Bro.prototype.empty = (function () {
  _$jscoverage['js/lib/bro.js'][748]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][749]++;
  node.textContent = "";
}));
  _$jscoverage['js/lib/bro.js'][751]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][754]++;
  Bro.prototype.val = (function (value) {
  _$jscoverage['js/lib/bro.js'][756]++;
  if (((typeof value) === "string")) {
    _$jscoverage['js/lib/bro.js'][757]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][758]++;
  node.value = value;
}));
  }
  else {
    _$jscoverage['js/lib/bro.js'][761]++;
    return (this.length? this[0].value: "");
  }
  _$jscoverage['js/lib/bro.js'][764]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][768]++;
  Bro.prototype.data = (function (key, value) {
  _$jscoverage['js/lib/bro.js'][770]++;
  if ((! key)) {
    _$jscoverage['js/lib/bro.js'][771]++;
    console.warn("dataset - do not support for old android browser");
    _$jscoverage['js/lib/bro.js'][772]++;
    return (this.length? this[0].dataset: {});
  }
  _$jscoverage['js/lib/bro.js'][776]++;
  key = re.xToX(key);
  _$jscoverage['js/lib/bro.js'][778]++;
  if (((typeof key) === "string")) {
    _$jscoverage['js/lib/bro.js'][779]++;
    if ((value !== undefined)) {
      _$jscoverage['js/lib/bro.js'][781]++;
      if (this.isPlainObject(value)) {
        _$jscoverage['js/lib/bro.js'][782]++;
        value = JSON.stringify(value);
      }
      _$jscoverage['js/lib/bro.js'][785]++;
      this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][786]++;
  node.dataset[key] = value;
}));
      _$jscoverage['js/lib/bro.js'][789]++;
      return this;
    }
    _$jscoverage['js/lib/bro.js'][792]++;
    value = (this.length? this[0].dataset[key]: "");
    _$jscoverage['js/lib/bro.js'][793]++;
    if (re.json.test(value)) {
      _$jscoverage['js/lib/bro.js'][794]++;
      try {
        _$jscoverage['js/lib/bro.js'][795]++;
        return JSON.parse(this[0].dataset[key]);
      }
      catch (e) {
        _$jscoverage['js/lib/bro.js'][797]++;
        return value;
      }
    }
    _$jscoverage['js/lib/bro.js'][801]++;
    return value;
  }
  _$jscoverage['js/lib/bro.js'][805]++;
  if (this.isPlainObject(key)) {
    _$jscoverage['js/lib/bro.js'][807]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][808]++;
  var i;
  _$jscoverage['js/lib/bro.js'][809]++;
  for (i in key) {
    _$jscoverage['js/lib/bro.js'][810]++;
    if (key.hasOwnProperty(i)) {
      _$jscoverage['js/lib/bro.js'][811]++;
      if (this.isPlainObject(key[i])) {
        _$jscoverage['js/lib/bro.js'][812]++;
        node.dataset[i] = JSON.stringify(key[i]);
      }
      else {
        _$jscoverage['js/lib/bro.js'][814]++;
        node.dataset[i] = key[i];
      }
    }
}
}), this);
    _$jscoverage['js/lib/bro.js'][820]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][824]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][828]++;
  Bro.prototype.prop = (function (key, value) {
  _$jscoverage['js/lib/bro.js'][830]++;
  if ((((typeof key) === "string") && (value === undefined))) {
    _$jscoverage['js/lib/bro.js'][831]++;
    return (this.length? this[0][key]: "");
  }
  _$jscoverage['js/lib/bro.js'][835]++;
  if (this.isPlainObject(key)) {
    _$jscoverage['js/lib/bro.js'][836]++;
    this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][837]++;
  var i;
  _$jscoverage['js/lib/bro.js'][838]++;
  for (i in key) {
    _$jscoverage['js/lib/bro.js'][839]++;
    if (key.hasOwnProperty(i)) {
      _$jscoverage['js/lib/bro.js'][840]++;
      node[i] = key[i];
    }
}
}));
    _$jscoverage['js/lib/bro.js'][844]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][847]++;
  if (((typeof value) === "function")) {
    _$jscoverage['js/lib/bro.js'][848]++;
    this.forEach((function (node, index) {
  _$jscoverage['js/lib/bro.js'][849]++;
  node[key] = value.call(node, index, node[key]);
}));
    _$jscoverage['js/lib/bro.js'][851]++;
    return this;
  }
  _$jscoverage['js/lib/bro.js'][854]++;
  this.forEach((function (node) {
  _$jscoverage['js/lib/bro.js'][855]++;
  node[key] = value;
}));
  _$jscoverage['js/lib/bro.js'][857]++;
  return this;
});
  _$jscoverage['js/lib/bro.js'][862]++;
  Bro.prototype.template = (function (str) {
  _$jscoverage['js/lib/bro.js'][863]++;
  return new Function("obj", ("var p=[]; with(obj){p.push('" + str.replace(/[\r\t\n]/g, " ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g, "$1\r").replace(/\t=([\s\S]*?)%>/g, "',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'") + "');} return p.join('');"));
});
  _$jscoverage['js/lib/bro.js'][874]++;
  Bro.prototype.toArray = (function (arr) {
  _$jscoverage['js/lib/bro.js'][875]++;
  return Array.prototype.slice.call(arr);
});
  _$jscoverage['js/lib/bro.js'][878]++;
  Bro.prototype.inArray = (function (arr, obj) {
  _$jscoverage['js/lib/bro.js'][879]++;
  return (arr.indexOf(obj) !== -1);
});
  _$jscoverage['js/lib/bro.js'][882]++;
  Bro.prototype.shuffle = (function (arr) {
  _$jscoverage['js/lib/bro.js'][883]++;
  return arr.sort((function () {
  _$jscoverage['js/lib/bro.js'][884]++;
  return (Math.random() - 0.5);
}));
});
  _$jscoverage['js/lib/bro.js'][888]++;
  Bro.prototype.duplicate = (function (obj) {
  _$jscoverage['js/lib/bro.js'][889]++;
  return JSON.parse(JSON.stringify(obj));
});
  _$jscoverage['js/lib/bro.js'][892]++;
  Bro.prototype.isPlainObject = (function (obj) {
  _$jscoverage['js/lib/bro.js'][893]++;
  return (obj && (obj.constructor === Object));
});
  _$jscoverage['js/lib/bro.js'][896]++;
  Bro.prototype.isEmptyObject = (function (obj) {
  _$jscoverage['js/lib/bro.js'][898]++;
  if ((! this.isPlainObject(obj))) {
    _$jscoverage['js/lib/bro.js'][899]++;
    return false;
  }
  _$jscoverage['js/lib/bro.js'][902]++;
  return (! Object.keys(obj).length);
});
  _$jscoverage['js/lib/bro.js'][906]++;
  Bro.prototype.screen = (function () {
  _$jscoverage['js/lib/bro.js'][907]++;
  var data = {}, width = docElem.clientWidth, height = docElem.clientHeight;
  _$jscoverage['js/lib/bro.js'][911]++;
  data.width = width;
  _$jscoverage['js/lib/bro.js'][912]++;
  data.height = height;
  _$jscoverage['js/lib/bro.js'][913]++;
  data.orientation = ((width > height)? "landscape": "portrait");
  _$jscoverage['js/lib/bro.js'][914]++;
  data.aspectRatio = (width / height);
  _$jscoverage['js/lib/bro.js'][915]++;
  data.smallestSide = ((width > height)? height: width);
  _$jscoverage['js/lib/bro.js'][916]++;
  data.biggestSide = ((width < height)? height: width);
  _$jscoverage['js/lib/bro.js'][917]++;
  data.center = {x: (width / 2), y: (height / 2)};
  _$jscoverage['js/lib/bro.js'][922]++;
  return data;
});
  _$jscoverage['js/lib/bro.js'][926]++;
  Bro.prototype.setBodyScroll = (function (canScroll) {
  _$jscoverage['js/lib/bro.js'][927]++;
  info.canScroll = canScroll;
});
  _$jscoverage['js/lib/bro.js'][930]++;
  Bro.prototype.vendorPrefix = (function () {
  _$jscoverage['js/lib/bro.js'][931]++;
  return ({css: "-webkit-", js: "webkit"});
});
  _$jscoverage['js/lib/bro.js'][937]++;
  Bro.prototype.ajax = (function (data) {
  _$jscoverage['js/lib/bro.js'][939]++;
  data.type = (data.type || "GET");
  _$jscoverage['js/lib/bro.js'][941]++;
  data.success = (data.success || (function () {
}));
  _$jscoverage['js/lib/bro.js'][942]++;
  data.error = (data.error || (function () {
}));
  _$jscoverage['js/lib/bro.js'][944]++;
  var xhr = new XMLHttpRequest();
  _$jscoverage['js/lib/bro.js'][946]++;
  xhr.onreadystatechange = (function () {
  _$jscoverage['js/lib/bro.js'][947]++;
  if ((xhr.readyState !== 4)) {
    _$jscoverage['js/lib/bro.js'][948]++;
    return;
  }
  _$jscoverage['js/lib/bro.js'][951]++;
  if ((xhr.status !== 200)) {
    _$jscoverage['js/lib/bro.js'][952]++;
    data.error();
    _$jscoverage['js/lib/bro.js'][953]++;
    return;
  }
  _$jscoverage['js/lib/bro.js'][956]++;
  data.success(xhr.responseText);
});
  _$jscoverage['js/lib/bro.js'][959]++;
  switch (data.type) {
  case "GET":
    _$jscoverage['js/lib/bro.js'][961]++;
    xhr.open(data.type, data.url, true);
    _$jscoverage['js/lib/bro.js'][962]++;
    xhr.send(null);
    _$jscoverage['js/lib/bro.js'][963]++;
    break;
  default:
    _$jscoverage['js/lib/bro.js'][965]++;
    console.warn("not supported type of ajax request");
  }
  _$jscoverage['js/lib/bro.js'][969]++;
  return xhr;
});
})(window, document, document.documentElement);
