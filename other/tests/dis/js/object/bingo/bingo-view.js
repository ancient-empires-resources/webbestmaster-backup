/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/object/bingo/bingo-view.js']) {
  _$jscoverage['js/object/bingo/bingo-view.js'] = [];
  _$jscoverage['js/object/bingo/bingo-view.js'][1] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][3] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][7] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][9] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][22] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][24] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][26] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][28] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][30] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][32] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][34] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][36] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][38] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][39] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][44] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][45] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][50] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][52] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][57] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][59] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][60] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][61] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][65] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][67] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][71] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][74] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][77] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][78] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][79] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][81] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][82] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][85] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][89] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][91] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][93] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][96] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][97] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][98] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][99] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][102] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][103] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][104] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][105] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][109] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][110] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][112] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][115] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][116] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][118] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][121] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][122] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][126] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][127] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][132] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][133] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][137] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][138] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][140] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][147] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][152] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][153] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][154] = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][157] = 0;
}
_$jscoverage['js/object/bingo/bingo-view.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>win<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"s\">\"use strict\"</span><span class=\"k\">;</span>","\t<span class=\"c\">/*global window, location */</span>","\t<span class=\"c\">/*global bingo, $, Backbone, APP, info */</span>","","\twin<span class=\"k\">.</span>APP <span class=\"k\">=</span> win<span class=\"k\">.</span>APP <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","\twin<span class=\"k\">.</span>APP<span class=\"k\">.</span>BingoView <span class=\"k\">=</span> win<span class=\"k\">.</span>APP<span class=\"k\">.</span>MainView<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","\t\ttemplates<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'bingo'</span><span class=\"k\">],</span>","\t\tevents<span class=\"k\">:</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"s\">'click .js-table-cell-word'</span><span class=\"k\">:</span> <span class=\"s\">'setWord'</span><span class=\"k\">,</span>","\t\t\t<span class=\"s\">'click .js-info'</span><span class=\"k\">:</span> <span class=\"s\">'info'</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tselectors<span class=\"k\">:</span> <span class=\"k\">{</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tinit<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">var</span> obj <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>copyObject<span class=\"k\">(</span>bingo<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>name<span class=\"k\">]);</span>","","\t\t\tobj <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>shuffleWords<span class=\"k\">(</span>obj<span class=\"k\">);</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$el <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"bingo js-bingo\"/&gt;'</span><span class=\"k\">).</span>html<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>tmpl<span class=\"k\">.</span>bingo<span class=\"k\">(</span>obj<span class=\"k\">));</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$endGameAlert <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-end-game-alert-wrapper'</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$wrapper <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'.js-wrapper'</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$wrapper<span class=\"k\">.</span>html<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$wrapper<span class=\"k\">.</span>append<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">);</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>setCellSize<span class=\"k\">();</span>","","\t\t\t<span class=\"k\">var</span> util <span class=\"k\">=</span> $<span class=\"k\">();</span>","\t\t\tutil<span class=\"k\">.</span>setBodyScroll<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tsetCellSize<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">function</span> setCellSize<span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> $cells <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-table-cell-word'</span><span class=\"k\">),</span>","\t\t\t\t\t$table <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-words-tablet'</span><span class=\"k\">),</span>","\t\t\t\t\tdocElem <span class=\"k\">=</span> win<span class=\"k\">.</span>document<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>","\t\t\t\t\tsize <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>docElem<span class=\"k\">.</span>clientHeight<span class=\"k\">,</span> docElem<span class=\"k\">.</span>clientWidth<span class=\"k\">);</span>","","\t\t\t\tsize <span class=\"k\">-=</span> <span class=\"s\">30</span><span class=\"k\">;</span>","","\t\t\t\t$table<span class=\"k\">.</span>css<span class=\"k\">(</span><span class=\"k\">{</span>","\t\t\t\t\twidth<span class=\"k\">:</span> size <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">,</span>","\t\t\t\t\theight<span class=\"k\">:</span> size <span class=\"k\">+</span> <span class=\"s\">'px'</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\t\t\tsize <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>size <span class=\"k\">/</span> <span class=\"s\">5</span><span class=\"k\">);</span>","","\t\t\t\t$cells<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> size <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> size <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tsetCellSize<span class=\"k\">.</span>call<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","","\t\t\tsetTimeout<span class=\"k\">(</span>setCellSize<span class=\"k\">.</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">),</span> <span class=\"s\">200</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tcopyObject<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>obj<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tsetWord<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> $node <span class=\"k\">=</span> $<span class=\"k\">(</span>e<span class=\"k\">.</span>currentTarget<span class=\"k\">),</span>","\t\t\t\t$word <span class=\"k\">=</span> $node<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-bingo-word'</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>$word<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">'true'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t$word<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"s\">'false'</span><span class=\"k\">);</span>","\t\t\t\t$node<span class=\"k\">.</span>removeClass<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t$word<span class=\"k\">.</span>data<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"s\">'true'</span><span class=\"k\">);</span>","\t\t\t\t$node<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>bingoTest<span class=\"k\">();</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tbingoTest<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> i<span class=\"k\">,</span> diagonal_1 <span class=\"k\">=</span> <span class=\"k\">[],</span> diagonal_2 <span class=\"k\">=</span> <span class=\"k\">[],</span> $nodes<span class=\"k\">,</span> isBingo<span class=\"k\">,</span> $row<span class=\"k\">,</span> $column<span class=\"k\">,</span> diagonalNode<span class=\"k\">;</span>","","\t\t\tisBingo <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;=</span> <span class=\"s\">5</span><span class=\"k\">;</span> i <span class=\"k\">+=</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t\t<span class=\"c\">// get diagonal data</span>","\t\t\t\tdiagonalNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-words-tablet .table-row:nth-child('</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'.table-cell:nth-child('</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">);</span>","\t\t\t\tdiagonalNode <span class=\"k\">=</span> diagonalNode<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'[data-checked=\"true\"]'</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>diagonalNode<span class=\"k\">.</span>isEmpty<span class=\"k\">())</span> <span class=\"k\">{</span>","\t\t\t\t\tdiagonal_1<span class=\"k\">.</span>push<span class=\"k\">(</span>diagonalNode<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\tdiagonalNode <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-words-tablet .table-row:nth-child('</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">).</span>find<span class=\"k\">(</span><span class=\"s\">'.table-cell:nth-child('</span> <span class=\"k\">+</span> <span class=\"k\">(</span><span class=\"s\">6</span> <span class=\"k\">-</span> i<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">);</span>","\t\t\t\tdiagonalNode <span class=\"k\">=</span> diagonalNode<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'[data-checked=\"true\"]'</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>diagonalNode<span class=\"k\">.</span>isEmpty<span class=\"k\">())</span> <span class=\"k\">{</span>","\t\t\t\t\tdiagonal_2<span class=\"k\">.</span>push<span class=\"k\">(</span>diagonalNode<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"c\">// horizontal test</span>","\t\t\t\t$row <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-words-tablet .table-row:nth-child('</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">);</span>","\t\t\t\t$nodes <span class=\"k\">=</span> $row<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'[data-checked=\"true\"]'</span><span class=\"k\">);</span>","","\t\t\t\tisBingo <span class=\"k\">=</span> isBingo <span class=\"k\">||</span> $nodes<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">5</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"c\">// vertical test</span>","\t\t\t\t$column <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-words-tablet .table-row .table-cell:nth-child('</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">')'</span><span class=\"k\">);</span>","\t\t\t\t$nodes <span class=\"k\">=</span> $column<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'[data-checked=\"true\"]'</span><span class=\"k\">);</span>","","\t\t\t\tisBingo <span class=\"k\">=</span> isBingo <span class=\"k\">||</span> $nodes<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">5</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"c\">// test diagonal</span>","\t\t\t\tisBingo <span class=\"k\">=</span> isBingo <span class=\"k\">||</span> diagonal_1<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">5</span><span class=\"k\">;</span>","\t\t\t\tisBingo <span class=\"k\">=</span> isBingo <span class=\"k\">||</span> diagonal_2<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">5</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>isBingo<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>alertEndGame<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\talertEndGame<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$endGameAlert<span class=\"k\">.</span>addClass<span class=\"k\">(</span><span class=\"s\">'show-alert'</span><span class=\"k\">);</span>","\t\t\t$<span class=\"k\">(</span><span class=\"s\">'.bingo'</span><span class=\"k\">).</span>addClass<span class=\"k\">(</span><span class=\"s\">'blur'</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tinfo<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>location<span class=\"k\">.</span>hash <span class=\"k\">===</span> <span class=\"s\">'#info'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tBackbone<span class=\"k\">.</span>history<span class=\"k\">.</span>history<span class=\"k\">.</span>back<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\tAPP<span class=\"k\">.</span>router<span class=\"k\">.</span>navigate<span class=\"k\">(</span><span class=\"s\">'info'</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","","\t\tshuffleWords<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">var</span> words <span class=\"k\">=</span> obj<span class=\"k\">.</span>words<span class=\"k\">[</span>info<span class=\"k\">.</span>lang<span class=\"k\">],</span>","\t\t\t\tutil <span class=\"k\">=</span> $<span class=\"k\">(),</span>","\t\t\t\tcenterWord <span class=\"k\">=</span> words<span class=\"k\">[</span><span class=\"s\">12</span><span class=\"k\">],</span>","\t\t\t\ti <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">do</span> <span class=\"k\">{</span>","\t\t\t\twords <span class=\"k\">=</span> util<span class=\"k\">.</span>shuffle<span class=\"k\">(</span>words<span class=\"k\">);</span>","\t\t\t\ti <span class=\"k\">+=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span>i <span class=\"k\">&lt;</span> <span class=\"s\">1000</span> <span class=\"k\">&amp;&amp;</span> centerWord <span class=\"k\">!==</span> words<span class=\"k\">[</span><span class=\"s\">12</span><span class=\"k\">]);</span>","","\t\t\t<span class=\"k\">return</span> obj<span class=\"k\">;</span>","","\t\t<span class=\"k\">}</span>","","","","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","","<span class=\"k\">}</span><span class=\"k\">(</span>window<span class=\"k\">));</span>"];
_$jscoverage['js/object/bingo/bingo-view.js'][1]++;
(function (win) {
  _$jscoverage['js/object/bingo/bingo-view.js'][3]++;
  "use strict";
  _$jscoverage['js/object/bingo/bingo-view.js'][7]++;
  win.APP = (win.APP || {});
  _$jscoverage['js/object/bingo/bingo-view.js'][9]++;
  win.APP.BingoView = win.APP.MainView.extend({templates: ["bingo"], events: {"click .js-table-cell-word": "setWord", "click .js-info": "info"}, selectors: {}, init: (function () {
  _$jscoverage['js/object/bingo/bingo-view.js'][22]++;
  var obj = this.copyObject(bingo[this.name]);
  _$jscoverage['js/object/bingo/bingo-view.js'][24]++;
  obj = this.shuffleWords(obj);
  _$jscoverage['js/object/bingo/bingo-view.js'][26]++;
  this.$el = $("<div class=\"bingo js-bingo\"/>").html(this.tmpl.bingo(obj));
  _$jscoverage['js/object/bingo/bingo-view.js'][28]++;
  this.$endGameAlert = this.$el.find(".js-end-game-alert-wrapper");
  _$jscoverage['js/object/bingo/bingo-view.js'][30]++;
  this.$wrapper = $(".js-wrapper");
  _$jscoverage['js/object/bingo/bingo-view.js'][32]++;
  this.$wrapper.html("");
  _$jscoverage['js/object/bingo/bingo-view.js'][34]++;
  this.$wrapper.append(this.$el);
  _$jscoverage['js/object/bingo/bingo-view.js'][36]++;
  this.setCellSize();
  _$jscoverage['js/object/bingo/bingo-view.js'][38]++;
  var util = $();
  _$jscoverage['js/object/bingo/bingo-view.js'][39]++;
  util.setBodyScroll(false);
}), setCellSize: (function () {
  _$jscoverage['js/object/bingo/bingo-view.js'][44]++;
  function setCellSize() {
    _$jscoverage['js/object/bingo/bingo-view.js'][45]++;
    var $cells = this.$el.find(".js-table-cell-word"), $table = this.$el.find(".js-words-tablet"), docElem = win.document.documentElement, size = Math.min(docElem.clientHeight, docElem.clientWidth);
    _$jscoverage['js/object/bingo/bingo-view.js'][50]++;
    size -= 30;
    _$jscoverage['js/object/bingo/bingo-view.js'][52]++;
    $table.css({width: (size + "px"), height: (size + "px")});
    _$jscoverage['js/object/bingo/bingo-view.js'][57]++;
    size = Math.floor((size / 5));
    _$jscoverage['js/object/bingo/bingo-view.js'][59]++;
    $cells.each((function () {
  _$jscoverage['js/object/bingo/bingo-view.js'][60]++;
  this.style.width = (size + "px");
  _$jscoverage['js/object/bingo/bingo-view.js'][61]++;
  this.style.height = (size + "px");
}));
}
  _$jscoverage['js/object/bingo/bingo-view.js'][65]++;
  setCellSize.call(this);
  _$jscoverage['js/object/bingo/bingo-view.js'][67]++;
  setTimeout(setCellSize.bind(this), 200);
}), copyObject: (function (obj) {
  _$jscoverage['js/object/bingo/bingo-view.js'][71]++;
  return JSON.parse(JSON.stringify(obj));
}), setWord: (function (e) {
  _$jscoverage['js/object/bingo/bingo-view.js'][74]++;
  var $node = $(e.currentTarget), $word = $node.find(".js-bingo-word");
  _$jscoverage['js/object/bingo/bingo-view.js'][77]++;
  if (($word.data("checked") === "true")) {
    _$jscoverage['js/object/bingo/bingo-view.js'][78]++;
    $word.data("checked", "false");
    _$jscoverage['js/object/bingo/bingo-view.js'][79]++;
    $node.removeClass("checked");
  }
  else {
    _$jscoverage['js/object/bingo/bingo-view.js'][81]++;
    $word.data("checked", "true");
    _$jscoverage['js/object/bingo/bingo-view.js'][82]++;
    $node.addClass("checked");
  }
  _$jscoverage['js/object/bingo/bingo-view.js'][85]++;
  this.bingoTest();
}), bingoTest: (function () {
  _$jscoverage['js/object/bingo/bingo-view.js'][89]++;
  var i, diagonal_1 = [], diagonal_2 = [], $nodes, isBingo, $row, $column, diagonalNode;
  _$jscoverage['js/object/bingo/bingo-view.js'][91]++;
  isBingo = false;
  _$jscoverage['js/object/bingo/bingo-view.js'][93]++;
  for (i = 1; (i <= 5); (i += 1)) {
    _$jscoverage['js/object/bingo/bingo-view.js'][96]++;
    diagonalNode = this.$el.find((".js-words-tablet .table-row:nth-child(" + i + ")")).find((".table-cell:nth-child(" + i + ")"));
    _$jscoverage['js/object/bingo/bingo-view.js'][97]++;
    diagonalNode = diagonalNode.find("[data-checked=\"true\"]");
    _$jscoverage['js/object/bingo/bingo-view.js'][98]++;
    if ((! diagonalNode.isEmpty())) {
      _$jscoverage['js/object/bingo/bingo-view.js'][99]++;
      diagonal_1.push(diagonalNode);
    }
    _$jscoverage['js/object/bingo/bingo-view.js'][102]++;
    diagonalNode = this.$el.find((".js-words-tablet .table-row:nth-child(" + i + ")")).find((".table-cell:nth-child(" + (6 - i) + ")"));
    _$jscoverage['js/object/bingo/bingo-view.js'][103]++;
    diagonalNode = diagonalNode.find("[data-checked=\"true\"]");
    _$jscoverage['js/object/bingo/bingo-view.js'][104]++;
    if ((! diagonalNode.isEmpty())) {
      _$jscoverage['js/object/bingo/bingo-view.js'][105]++;
      diagonal_2.push(diagonalNode);
    }
    _$jscoverage['js/object/bingo/bingo-view.js'][109]++;
    $row = this.$el.find((".js-words-tablet .table-row:nth-child(" + i + ")"));
    _$jscoverage['js/object/bingo/bingo-view.js'][110]++;
    $nodes = $row.find("[data-checked=\"true\"]");
    _$jscoverage['js/object/bingo/bingo-view.js'][112]++;
    isBingo = (isBingo || ($nodes.length === 5));
    _$jscoverage['js/object/bingo/bingo-view.js'][115]++;
    $column = this.$el.find((".js-words-tablet .table-row .table-cell:nth-child(" + i + ")"));
    _$jscoverage['js/object/bingo/bingo-view.js'][116]++;
    $nodes = $column.find("[data-checked=\"true\"]");
    _$jscoverage['js/object/bingo/bingo-view.js'][118]++;
    isBingo = (isBingo || ($nodes.length === 5));
    _$jscoverage['js/object/bingo/bingo-view.js'][121]++;
    isBingo = (isBingo || (diagonal_1.length === 5));
    _$jscoverage['js/object/bingo/bingo-view.js'][122]++;
    isBingo = (isBingo || (diagonal_2.length === 5));
}
  _$jscoverage['js/object/bingo/bingo-view.js'][126]++;
  if (isBingo) {
    _$jscoverage['js/object/bingo/bingo-view.js'][127]++;
    this.alertEndGame();
  }
}), alertEndGame: (function () {
  _$jscoverage['js/object/bingo/bingo-view.js'][132]++;
  this.$endGameAlert.addClass("show-alert");
  _$jscoverage['js/object/bingo/bingo-view.js'][133]++;
  $(".bingo").addClass("blur");
}), info: (function () {
  _$jscoverage['js/object/bingo/bingo-view.js'][137]++;
  if ((location.hash === "#info")) {
    _$jscoverage['js/object/bingo/bingo-view.js'][138]++;
    Backbone.history.history.back();
  }
  else {
    _$jscoverage['js/object/bingo/bingo-view.js'][140]++;
    APP.router.navigate("info");
  }
}), shuffleWords: (function (obj) {
  _$jscoverage['js/object/bingo/bingo-view.js'][147]++;
  var words = obj.words[info.lang], util = $(), centerWord = words[12], i = 0;
  _$jscoverage['js/object/bingo/bingo-view.js'][152]++;
  do {
    _$jscoverage['js/object/bingo/bingo-view.js'][153]++;
    words = util.shuffle(words);
    _$jscoverage['js/object/bingo/bingo-view.js'][154]++;
    i += 1;
}
  while (((i < 1000) && (centerWord !== words[12])));
  _$jscoverage['js/object/bingo/bingo-view.js'][157]++;
  return obj;
})});
})(window);
