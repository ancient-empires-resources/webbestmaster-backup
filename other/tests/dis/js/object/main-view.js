/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    this._$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (! this._$jscoverage) {
  this._$jscoverage = {};
}
if (! _$jscoverage['js/object/main-view.js']) {
  _$jscoverage['js/object/main-view.js'] = [];
  _$jscoverage['js/object/main-view.js'][1] = 0;
  _$jscoverage['js/object/main-view.js'][3] = 0;
  _$jscoverage['js/object/main-view.js'][6] = 0;
  _$jscoverage['js/object/main-view.js'][8] = 0;
  _$jscoverage['js/object/main-view.js'][15] = 0;
  _$jscoverage['js/object/main-view.js'][18] = 0;
  _$jscoverage['js/object/main-view.js'][19] = 0;
  _$jscoverage['js/object/main-view.js'][20] = 0;
  _$jscoverage['js/object/main-view.js'][24] = 0;
  _$jscoverage['js/object/main-view.js'][25] = 0;
  _$jscoverage['js/object/main-view.js'][28] = 0;
  _$jscoverage['js/object/main-view.js'][29] = 0;
  _$jscoverage['js/object/main-view.js'][32] = 0;
  _$jscoverage['js/object/main-view.js'][33] = 0;
  _$jscoverage['js/object/main-view.js'][34] = 0;
  _$jscoverage['js/object/main-view.js'][35] = 0;
  _$jscoverage['js/object/main-view.js'][36] = 0;
  _$jscoverage['js/object/main-view.js'][37] = 0;
  _$jscoverage['js/object/main-view.js'][41] = 0;
  _$jscoverage['js/object/main-view.js'][43] = 0;
  _$jscoverage['js/object/main-view.js'][47] = 0;
  _$jscoverage['js/object/main-view.js'][48] = 0;
  _$jscoverage['js/object/main-view.js'][49] = 0;
}
_$jscoverage['js/object/main-view.js'].source = ["<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>win<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"s\">\"use strict\"</span><span class=\"k\">;</span>","\t<span class=\"c\">/*global window, Backbone, $, templateMaster */</span>","","\twin<span class=\"k\">.</span>APP <span class=\"k\">=</span> win<span class=\"k\">.</span>APP <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","\twin<span class=\"k\">.</span>APP<span class=\"k\">.</span>MainView <span class=\"k\">=</span> Backbone<span class=\"k\">.</span>View<span class=\"k\">.</span>extend<span class=\"k\">(</span><span class=\"k\">{</span>","","\t\ttemplates<span class=\"k\">:</span> <span class=\"k\">[],</span>","\t\ttmpl<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\tevents<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","\t\tinitialize<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t\t\t<span class=\"k\">var</span> events <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>events<span class=\"k\">,</span>","\t\t\t\tkey<span class=\"k\">,</span> event<span class=\"k\">,</span> selector<span class=\"k\">,</span> arr<span class=\"k\">;</span>","","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">this</span><span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> data<span class=\"k\">[</span>key<span class=\"k\">];</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>templates<span class=\"k\">.</span>forEach<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>name<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>tmpl<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> templateMaster<span class=\"k\">.</span>tmplFn<span class=\"k\">[</span>name<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>init<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>init<span class=\"k\">();</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">for</span> <span class=\"k\">(</span>key <span class=\"k\">in</span> events<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>events<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\t\t\tarr <span class=\"k\">=</span> key<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/,/gi</span><span class=\"k\">,</span> <span class=\"s\">' '</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s+/gi</span><span class=\"k\">,</span> <span class=\"s\">' '</span><span class=\"k\">).</span>match<span class=\"k\">(</span><span class=\"s\">/[\\S]+/g</span><span class=\"k\">);</span>","\t\t\t\t\tevent <span class=\"k\">=</span> arr<span class=\"k\">.</span>shift<span class=\"k\">();</span>","\t\t\t\t\tselector <span class=\"k\">=</span> arr<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">', '</span><span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span>selector<span class=\"k\">).</span>on<span class=\"k\">(</span>event<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">[</span>events<span class=\"k\">[</span>key<span class=\"k\">]].</span>bind<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">));</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>bindBackButton<span class=\"k\">();</span>","","\t\t\twindow<span class=\"k\">.</span>scrollTo<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\tbindBackButton<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">this</span><span class=\"k\">.</span>$el<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"s\">'.js-back'</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>Backbone<span class=\"k\">.</span>history<span class=\"k\">.</span>fragment<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tBackbone<span class=\"k\">.</span>history<span class=\"k\">.</span>history<span class=\"k\">.</span>back<span class=\"k\">();</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","","","","\t<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"k\">}</span><span class=\"k\">(</span>window<span class=\"k\">));</span>"];
_$jscoverage['js/object/main-view.js'][1]++;
(function (win) {
  _$jscoverage['js/object/main-view.js'][3]++;
  "use strict";
  _$jscoverage['js/object/main-view.js'][6]++;
  win.APP = (win.APP || {});
  _$jscoverage['js/object/main-view.js'][8]++;
  win.APP.MainView = Backbone.View.extend({templates: [], tmpl: {}, events: {}, initialize: (function (data) {
  _$jscoverage['js/object/main-view.js'][15]++;
  var events = this.events, key, event, selector, arr;
  _$jscoverage['js/object/main-view.js'][18]++;
  for (key in data) {
    _$jscoverage['js/object/main-view.js'][19]++;
    if (data.hasOwnProperty(key)) {
      _$jscoverage['js/object/main-view.js'][20]++;
      this[key] = data[key];
    }
}
  _$jscoverage['js/object/main-view.js'][24]++;
  this.templates.forEach((function (name) {
  _$jscoverage['js/object/main-view.js'][25]++;
  this.tmpl[name] = templateMaster.tmplFn[name];
}), this);
  _$jscoverage['js/object/main-view.js'][28]++;
  if (this.init) {
    _$jscoverage['js/object/main-view.js'][29]++;
    this.init();
  }
  _$jscoverage['js/object/main-view.js'][32]++;
  for (key in events) {
    _$jscoverage['js/object/main-view.js'][33]++;
    if (events.hasOwnProperty(key)) {
      _$jscoverage['js/object/main-view.js'][34]++;
      arr = key.replace(/,/gi, " ").replace(/\s+/gi, " ").match(/[\S]+/g);
      _$jscoverage['js/object/main-view.js'][35]++;
      event = arr.shift();
      _$jscoverage['js/object/main-view.js'][36]++;
      selector = arr.join(", ");
      _$jscoverage['js/object/main-view.js'][37]++;
      this.$el.find(selector).on(event, this[events[key]].bind(this));
    }
}
  _$jscoverage['js/object/main-view.js'][41]++;
  this.bindBackButton();
  _$jscoverage['js/object/main-view.js'][43]++;
  window.scrollTo(0, 0);
}), bindBackButton: (function () {
  _$jscoverage['js/object/main-view.js'][47]++;
  this.$el.find(".js-back").on("click", (function () {
  _$jscoverage['js/object/main-view.js'][48]++;
  if (Backbone.history.fragment) {
    _$jscoverage['js/object/main-view.js'][49]++;
    Backbone.history.history.back();
  }
}));
})});
})(window);
